[GENERAL]
description = C. elegans (current release)
database    = c_elegans

# where to link to when user clicks in detailed view
link             = /get?name=$name;class=$class
initial landmark = III:9060076..9071672

default tracks = PRIMARY_GENE_TRACK CLASSICAL_ALLELES POLYMORPHISMS LOCI:overview

# examples to show in the introduction
examples = IV 
	   IV:20,000..30,000 
	   lin-29
	   dpy-*
           rhodopsin
	   B0019 
	   PCR_product:sjj_B0019.1
           ttattaaacaatttaa

# Override the [DETAIL SELECT MENU] from detail_select_menu.conf
# C. elegans has a custom detail select menu.
#include includes/detail_menu-c_elegans.conf

# Plugin configuration
#include includes/plugin.conf

[MotifFinder:plugin]
matrix = matrices.txt

[Aligner:plugin]
alignable_tracks   = ESTB ESTO mRNAB
upcase_tracks      = CDS tRNA NG
align_default      = ESTB
upcase_default     = CDS
#ragged_default     = 10

[OligoFinder:plugin]
search_segments = I II III IV V X


# what to show in the overview section
[LOCI:overview]
key           = Landmarks
feature       = gene:landmark
label         = sub {
		my $f = shift;
		return join(", ", $f->get_tag_values('Locus'));
	}
glyph         = generic
bgcolor       = lavender
height        = 5

###################################
# Global track defaults.
# Can be overridden by any track
###################################
[TRACK DEFAULTS]
#include includes/track_defaults.conf

#################################
# database definitions
#################################
[c_elegans:database]
db_adaptor  = Bio::DB::SeqFeature::Store
db_args     = -adaptor DBI::mysql
              -dsn dbi:mysql:database=c_elegans_PRJNA13758_WS240;host=mysql.wormbase.org
	      -user wormbase
	      -pass sea3l3ganz
search options = default, +wildcard, -stem, +fulltext, +autocomplete

#[modencode_henikoff:database]
#db_adaptor    = Bio::DB::SeqFeature::Store
#db_args       = -dsn dbi:mysql:database=modencode_henikoff;host=mysql.wormbase.org
#	        -user wormbase
#	        -pass sea3l3ganz
#search options = default +wildcard -stem +fulltext +autocomplete

#[modencode_hillier_genelets:database]
#db_adaptor    = Bio::DB::SeqFeature::Store
#db_args       = -dsn dbi:mysql:database=modencode_hillier_genelets;host=mysql.wormbase.org
#	        -user wormbase
#	        -pass sea3l3ganz
##search options = exact
#search options = default +wildcard -stem +fulltext +autocomplete

#[modencode_hillier_itranscripts:database]
#db_adaptor    = Bio::DB::SeqFeature::Store
#db_args       = -dsn dbi:mysql:database=modencode_hillier_itranscripts;host=mysql.wormbase.org
#	        -user wormbase
#	        -pass sea3l3ganz
#search options = exact

#[modencode_lieb:database]
#db_adaptor    = Bio::DB::SeqFeature::Store
#db_args       = -dsn dbi:mysql:database=modencode_lieb;host=mysql.wormbase.org
#	        -user wormbase
#	        -pass sea3l3ganz
#search options = exact

#[modencode_piano:database]
#db_adaptor    = Bio::DB::SeqFeature::Store
#db_args       = -dsn dbi:mysql:database=modencode_piano;host=mysql.wormbase.org
#	        -user wormbase
#	        -pass sea3l3ganz
#search options = exact

#[modencode_snyder:database]
#db_adaptor    = Bio::DB::SeqFeature::Store
#db_args       = -dsn dbi:mysql:database=modencode_snyder;host=mysql.wormbase.org
#	        -user wormbase
#	        -pass sea3l3ganz
#search options = exact

#[modencode_waterston:database]
#db_adaptor    = Bio::DB::SeqFeature::Store
#db_args       = -dsn dbi:mysql:database=modencode_waterston;host=mysql.wormbase.org
#	        -user wormbase
#	        -pass sea3l3ganz
#search options = exact

# GBrowse Cliff notes:
# title - shown on hover
# label - shown ABOVE feature
# description - shown BELOW feature; can NOT reside in an include file
# Things like bgcolor:
#       bgcolor is applied per COMPONENT, not in aggregate.


################################################
#
# Category: Genes
#
#   The [track stanza] is specified here and NOT included
#   in the *.track file so that we can provide specific 
#   configuration on a per-species basis. 
#   This is mostly limited to the "key" for the
#   track select panel.
#
#   Note: Some include tracks also contain the [TRACKTITLE]
#         entry; others require that it be provided.
#
################################################
[PRIMARY_GENE_TRACK]
key=Curated Genes
citation = Protein-coding gene structures result from the integration of a variety 
           of prediction methods and data sources followed by manual review and revison 
           by WormBase curators. tRNAs are predicted by tRNAscan, and other non-coding 
           RNA transcripts are taken from a variety of literature sources. 
           The purple and blue colors indicate transcripts on the forward and 
           reverse strands respectively. If sufficient room is available between 
           features, gene models end with a triangle; if not a small arrow is used. 
           Grey areas represent 5' and 3' UTRs of protein-coding transcripts, assigned  
           automatically using the extents of overlapping ESTs and full-length cDNAs. The 
           UTR predictions have not been reviewed by WormBase curators, and some are 
           known to contain artifacts.
#include includes/genes-all.track

[GENES_PROTEIN_CODING]
key=Curated Genes (protein coding)
#include includes/genes-protein_coding.track

[GENES_NONCODING]
key=Curated Genes (noncoding)
#include includes/genes-noncoding.track

[GENES_PSEUDOGENES]
key=Curated Genes (pseudogenes)
#include includes/genes-pseudogenes.track

# [DNA]
#include includes/dna.track

# [CDS]
#include includes/cds.track

# [HISTORICAL_GENES]
#include includes/historical_genes.track

[OPERONS]
#include includes/operons.track
citation     = These are operons published by Blumenthal et al, Nature 417: 851-854 (2002).

# [OPERONS_DEPRECATED]
#include includes/operons_deprected.track

# [TRANSPOSONS]
#include includes/transposons.track

# [TRANSPOSON_GENES]
#include includes/transposon_genes.track

# [POLYA_SITES]
#include includes/polya_sites.track

# [TRANS_SPLICED_ACCEPTORS]
#include includes/trans_spliced_acceptor.track

# --------------------------------------
#     C. elegans-specific gene tracks
# --------------------------------------

# [GENETIC_LIMITS]
#include includes/celegans-genetic_limits.track

# A whole slew of gene models from a variety of prediction algorithms.
#include includes/celegans-gene_predictions.track



################################################
#
# Category: Variations
#
################################################

# [CLASSICAL_ALLELES]
#include includes/variations-classical_alleles.track

[HIGH_THROUGHPUT_ALLELES]
key          = High-throughput alleles
category     = Alleles, Variations, RNAi
feature      = deletion:CGH_allele
	       complex_substitution:KO_consortium
	       deletion:KO_consortium
	       point_mutation:KO_consortium
	       deletion:Variation_project
	       insertion_site:Variation_project
	       point_mutation:Variation_project
	       complex_substitution:NBP_knockout
	       deletion:NBP_knockout
	       transposable_element_insertion_site:NemaGENETAG_consortium
label        = sub {
	     my $f = shift;
	     my %attributes = $f->attributes;
	     my $name = $attributes{public_name} || $f->name;
	     if ($name =~ /^WBVar/) {
	         ($name) = $f->attributes('other_name') || $name;
             }	     
	     return join('-',@$name);   
	      }	      
description  = sub {
		my $f = shift;
		my $m = $f->method;
		$m =~ s/_/ /g;
		return $m;
 	}
glyph        = sub {
		my $f = shift;
		my $m = $f->method;
		return 'triangle' if $m eq 'insertion_site';
		return 'triangle' if $m eq 'mobile_element_insertion';
		return 'box'      if $m eq 'complex_substitution';
		return 'box'      if $m eq 'deletion';
		return 'diamond'  if $m eq 'substitution';
		return 'diamond'  if $m eq 'point_mutation';
		return 'generic';
	}
bgcolor      = sub {
		my $f = shift;
		my $m = $f->method;
		return 'red'    if $m eq 'deletion';
		return 'yellow' if $m eq 'point_mutation';
		return 'yellow' if $m eq 'substitution';
		return 'blue'   if $m eq 'complex_substitution';		
		return 'white'; # insertion_site, mobile_element_insertion
	}
fgcolor      = black
font2color   = blue
height       = 8
balloon hover = sub {
	           my $f    = shift;
		   my $type = $f->method;
		   $type =~ s/_/ /g;

		   my ($name)        = $f->attributes('public_name');
		   #$name ||= $f->display_name;
		   my ($consequence) = $f->attributes('consequence');
		   $consequence =~ s/_/ /g;

		   my ($ref,$start,$stop) = ($f->ref,$f->start,$f->stop);
		   my ($status)    = $f->attributes('status');
		   my ($nt_change) = $f->attributes('substitution') || $f->attributes('insertion');
		   my ($aa_change) = $f->attributes('aachange');
		   my ($interpolated_map_position) = $f->attributes('interpolated_map_position');

		   # We might want to be a little fancier with sources, like linking to the resource.
                   my $source = $f->source; 
		   my $sanitized_source = $source;
		   $sanitized_source =~ s/_Polymorphisms//g;
		   $sanitized_source =~ s/_/ /g;

		   my @notes = ("<b>High-Throughput Allele: $name</b>");
		   push (@notes,"type: $type");
		   push (@notes,"status: $status")                  if $status;
		   push (@notes,"position: $ref:$start..$stop");
		   push (@notes,"nucleotide change: $nt_change")     if $nt_change;
		   push (@notes,"amino acid change: $aa_change")     if $aa_change;
           	   push (@notes,"consequence: " . lc($consequence)) if $consequence;
           	   push (@notes,"interpolated map position: $interpolated_map_position")   if $interpolated_map_position;
		   my ($strains) = $f->attributes('strain');
		   if ($strains) {
		      my $strains = join(', ',map { '<a href="http://www.wormbase.org/db/get?class=Strain;name=' . $_ . '">' . $_ . '</a>' } split(',',$strains));
		      push @notes,"strains: $strains"; 
		   }

		   push (@notes,"source: $sanitized_source");  # maybe a link to resource, too?	
		   return join('<br />',@notes);
	}
citation      = These are alleles generated through high-throughput, genome-wide projects. Million Mutation Project alleles are placed in a separate track.

[CHANGE_OF_FUNCTION_ALLELES]
feature =         complex_substitution:PCoF_Allele
                              deletion:PCoF_Allele
                        insertion_site:PCoF_Allele
                          substitution:PCoF_Allele
   transposable_element_insertion_site:PCoF_Allele
                              deletion:PCoF_CGH_allele
                  complex_substitution:PCoF_KO_consortium
                              deletion:PCoF_KO_consortium
                        point_mutation:PCoF_KO_consortium
                        point_mutation:PCoF_Million_mutation
                              deletion:PCoF_Million_mutation
                        insertion_site:PCoF_Million_mutation
                  complex_substitution:PCoF_Million_mutation
                   sequence_alteration:PCoF_Million_mutation
                              deletion:PCoF_Variation_project
                        point_mutation:PCoF_Variation_project
                  complex_substitution:PCoF_NBP_knockout
                              deletion:PCoF_NBP_knockout
              transposable_element_insertion_site:PCoF_NemaGENETAG_consortium
category     = Alleles, Variations, RNAi
key          = Change-of-function alleles
label        = sub {
	     my $f = shift;
	     my %attributes = $f->attributes;
	     my $name = $attributes{public_name} || $f->name;
	     if ($name =~ /^WBVar/) {
	         ($name) = $f->attributes('other_name') || $name;
             }	     
	     return join('-',@$name);   
	      }	      
description  = sub {
		my $f = shift;
		my $m = $f->method;
		$m =~ s/_/ /g;
		return $m;
 	}
glyph        = sub {
		my $f = shift;
		my $m = $f->method;
		return 'triangle' if $m =~ /insertion/i;  # insertion_site mobile_element_insertion tranposable_element_insertion
		return 'box'      if $m eq 'complex_substitution';
		return 'box'      if $m eq 'deletion';
		return 'diamond'  if $m eq 'substitution';
		return 'diamond'  if $m eq 'point_mutation';
		return 'generic';
	}
bgcolor      = sub {
		my $f = shift;
		my $m = $f->method;
	        my %attributes = $f->attributes();
		return 'green'  if $attributes{consequence} eq 'missense';
		return 'yellow' if $attributes{consequence} eq 'coding_exon';
		return 'red'    if $attributes{consequence} eq 'nonsense';
		return 'blue'   if $attributes{consequence} eq 'frameshift';
		return 'white'; # insertion_site, mobile_element_insertion	
#		return 'red'    if $m eq 'deletion';
#		return 'yellow' if $m eq 'point_mutation';
#		return 'yellow' if $m eq 'substitution';
#		return 'blue'   if $m eq 'complex_substitution';		
#		return 'white'; # insertion_site, mobile_element_insertion
	}
fgcolor      = black
font2color   = blue
height       = 8
balloon hover = sub {
	           my $f    = shift;
		   my $type = $f->method;
		   $type =~ s/_/ /g;

		   my ($name)        = $f->attributes('public_name');
		   #$name ||= $f->display_name;
		   my ($consequence) = $f->attributes('consequence');
		   $consequence =~ s/_/ /g;

		   my ($ref,$start,$stop) = ($f->ref,$f->start,$f->stop);
		   my ($status)    = $f->attributes('status');
		   my ($nt_change) = $f->attributes('substitution') || $f->attributes('insertion');
		   my ($aa_change) = $f->attributes('aachange');
		   my ($interpolated_map_position) = $f->attributes('interpolated_map_position');

		   # We might want to be a little fancier with sources, like linking to the resource.
                   my $source = $f->source; 
		   my $sanitized_source = $source;
		   $sanitized_source =~ s/_Polymorphisms//g;
		   $sanitized_source =~ s/_/ /g;
		   $sanitized_source =~ s/PCoF_//g;

		   my @notes = ("<b>Putative Change-of-Function Allele: $name</b>");
		   push (@notes,"type: $type");
		   push (@notes,"status: $status")                  if $status;
		   push (@notes,"position: $ref:$start..$stop");
		   push (@notes,"nucleotide change: $nt_change")     if $nt_change;
		   push (@notes,"amino acid change: $aa_change")     if $aa_change;
           	   push (@notes,"consequence: " . lc($consequence)) if $consequence;
           	   push (@notes,"interpolated map position: $interpolated_map_position")   if $interpolated_map_position;
		   my ($strains) = $f->attributes('strain');
		   if ($strains) {
		      my $strains = join(', ',map { '<a href="http://www.wormbase.org/db/get?class=Strain;name=' . $_ . '">' . $_ . '</a>' } split(',',$strains));
		      push @notes,"strains: $strains"; 
		   }

		   push (@notes,"source: $sanitized_source");  # maybe a link to resource, too?	
		   return join('<br />',@notes);
	}
citation      = This track shows alleles that generate a putative change-of-function.
	        In this track, the type of mutation is indicated by its glyph: Boxes are
 		deletions. Triangles are insertions. Point mutations and substitutions 
		are diamonds. Color shows the potential effect on coding regions.
                Green indicates a possible missense; red a possible
 		nonsense; blue a frameshift; yellow a disruption of a coding exon(s); and
		white for everything else. Mouse over the feature for details.

# [POLYMORPHISMS]
#include includes/variations-polymorphisms.track
citation     = This track shows single nucleotide polymorphisms (SNPs).
               In this track, the molecular nature of the polymorphism is indicated by
               its glyph: Boxes are deletions; triangles are insertions; point mutations
               and substitutions are diamonds. Color reflects the source strain: polymorphisms 
	       found in CB4858 (Pasadena) are shown in blue; those found in CB4856 (Hawaii) in yellow,	
	       and all others in white.

# [CHANGE_OF_FUNCTION_POLYMORPHISMS]
#include includes/variations-change_of_function_polymorphisms.track



[TRANSPOSON_INSERTION_SITES]
feature      = transposable_element_insertion_site:Mos_insertion_allele
               transposable_element_insertion_site:Allele
	       transposable_element_insertion_site:NemaGENETAG_consortium
category     = Alleles, Variations, RNAi
key          = Transposon insert sites
label        = sub {
	     my $f = shift;
	     my %attributes = $f->attributes;
	     my $name = $attributes{public_name} || $f->name;
	     if ($name =~ /^WBVar/) {
	         ($name) = $f->attributes('other_name') || $name;
             }	     
	     return join('-',@$name);   
	      }	      
description  = sub {
		my $f = shift;
		my $method = $f->method;
		return 'Mos insertion' if $f->source eq 'Mos_insertion_allele';
		return 'NemaGENETAG insertion' if $f->source eq 'NemaGENETAG_consortium';
		return 'transposon insertion';
 	}
glyph        = diamond
bgcolor      = sub {
		my $f = shift;
		return 'yellow' if $f->source eq 'Mos_insertion_allele';
		return 'red' if $f->source eq 'NemaGENETAG_consortium';
		return 'blue';
	}
fgcolor      = black
font2color   = blue
height       = 8
balloon hover = sub {
	           my $f    = shift;
		   my $type = $f->type;
		   $type =~ s/_/ /g;

		   my ($name)        = $f->attributes('public_name');
		   #$name ||= $f->display_name;
		   my ($consequence) = $f->attributes('consequence');
		   $consequence =~ s/_/ /g;

		   my ($ref,$start,$stop) = ($f->ref,$f->start,$f->stop);
		   my ($status)    = $f->attributes('status');
		   my ($nt_change) = $f->attributes('substitution') || $f->attributes('insertion');
		   my ($aa_change) = $f->attributes('aachange');
		   my ($interpolated_map_position) = $f->attributes('interpolated_map_position');

		   # We might want to be a little fancier with sources, like linking to the resource.
                   my $source = $f->source; 
		   my $sanitized_source = $source;
		   $sanitized_source =~ s/_Polymorphisms//g;
		   $sanitized_source =~ s/_/ /g;

		   my @notes = ("<b>Transposon insertion site: $name</b>");
		   push (@notes,"type: $type");
		   push (@notes,"status: $status")                  if $status;
		   push (@notes,"position: $ref:$start..$stop");
		   push (@notes,"nucleotide change: $nt_change")     if $nt_change;
		   push (@notes,"amino acid change: $aa_change")     if $aa_change;
           	   push (@notes,"consequence: " . lc($consequence)) if $consequence;
           	   push (@notes,"interpolated map position: $interpolated_map_position")   if $interpolated_map_position;
		   my ($strains) = $f->attributes('strain');
		   if ($strains) {
		      my $strains = join(', ',map { '<a href="http://www.wormbase.org/db/get?class=Strain;name=' . $_ . '">' . $_ . '</a>' } split(',',$strains));
		      push @notes,"strains: $strains"; 
		   }

		   push (@notes,"source: $sanitized_source");  # maybe a link to resource, too?	
		   return join('<br />',@notes);
	}
citation     = This track shows transposon insertion sites engineered by
               Laurent Segalat and others 
               [<a href="/get?name=%5Bwm99ab757%5D;class=Paper">Alvarez et al.</a>, Towards a genome-wide collection of transposon insertions, International C. elegans Meeting 1999 #757].
	      Yellow triangles are Mos-derived transposon insertions; red trangles are
	      NemaGENETAG consortium insertion sites;
              blue triangles are Tc* derived transposon insertions.




[MILLION_MUTATION_PROJECT]
feature      =       point_mutation:Million_mutation
               complex_substitution:Million_mutation
                           deletion:Million_mutation
                     insertion_site:Million_mutation
                sequence_alteration:Million_mutation
category     = Alleles, Variations, RNAi
key          = Million Mutation Project
label        = sub {
	     my $f = shift;
	     my %attributes = $f->attributes;
	     my $name = $attributes{public_name} || $f->name;
	     if ($name =~ /^WBVar/) {
	         ($name) = $f->attributes('other_name') || $name;
             }	     
	     return join('-',@$name);   
	      }	      
description  = sub {
		my $f = shift;
		my $m = $f->method;
		$m =~ s/_/ /g;
		return $m;
 	}
glyph        = sub {
		my $f = shift;
		my $m = $f->method;
		return 'triangle' if $m eq 'insertion_site';
		return 'triangle' if $m eq 'mobile_element_insertion';
		return 'box'      if $m eq 'complex_substitution';
		return 'box'      if $m eq 'deletion';
		return 'diamond'  if $m eq 'substitution';
		return 'diamond'  if $m eq 'point_mutation';
		return 'generic';
	}
bgcolor      = sub {
		my $f = shift;
		my $m = $f->method;
	        my %attributes = $f->attributes();
		return 'green'  if $attributes{consequence} eq 'missense';
		return 'yellow' if $attributes{consequence} eq 'coding_exon';
		return 'red'    if $attributes{consequence} eq 'nonsense';
		return 'blue'   if $attributes{consequence} eq 'frameshift';
		return 'white'; # insertion_site, mobile_element_insertion	
#		return 'red'    if $m eq 'deletion';
#		return 'yellow' if $m eq 'point_mutation';
#		return 'yellow' if $m eq 'substitution';
#		return 'blue'   if $m eq 'complex_substitution';		
#		return 'white'; # insertion_site, mobile_element_insertion
	}
fgcolor      = black
font2color   = blue
height       = 8
link         = sub {
                  my $f = shift;
                  my $name = $f->name;
                  return "/get?name=$name;class=Variation";
      }
balloon hover = sub {
	           my $f    = shift;
		   my $type = $f->type;
		   $type =~ s/_/ /g;

		   my ($name)        = $f->attributes('public_name');
		   #$name ||= $f->display_name;
		   my ($consequence) = $f->attributes('consequence');
		   $consequence =~ s/_/ /g;

		   my ($ref,$start,$stop) = ($f->ref,$f->start,$f->stop);
		   my ($status)    = $f->attributes('status');
		   my ($nt_change) = $f->attributes('substitution') || $f->attributes('insertion');
		   my ($aa_change) = $f->attributes('aachange');
		   my ($interpolated_map_position) = $f->attributes('interpolated_map_position');

		   # We might want to be a little fancier with sources, like linking to the resource.
                   my $source = $f->source; 
		   my $sanitized_source = $source;
		   $sanitized_source =~ s/_Polymorphisms//g;
		   $sanitized_source =~ s/_/ /g;

		   my @notes = ("<b>Million Mutation SNP: $name</b>");
		   push (@notes,"type: $type");
		   push (@notes,"status: $status")                  if $status;
		   push (@notes,"position: $ref:$start..$stop");
		   push (@notes,"nucleotide change: $nt_change")     if $nt_change;
		   push (@notes,"amino acid change: $aa_change")     if $aa_change;
           	   push (@notes,"consequence: " . lc($consequence)) if $consequence;
           	   push (@notes,"interpolated map position: $interpolated_map_position")   if $interpolated_map_position;
		   my ($strains) = $f->attributes('strain');
		   if ($strains) {
		      my $strains = join(', ',map { '<a href="http://www.wormbase.org/db/get?class=Strain;name=' . $_ . '">' . $_ . '</a>' } split(',',$strains));
		      push @notes,"strains: $strains"; 
		   }

		   push (@notes,"source: $sanitized_source");  # maybe a link to resource, too?	
		   return join('<br />',@notes);
	}
citation     = This track shows SNPs from the The Million Mutation Project (Waterston/Moerman).
               The color of the SNP represents its potental effect on a gene. Green indicates a
	       possible missense; red a possible nonsense; blue a frameshift; yellow a 
	       disruption of a coding exon(s); and white for everything else.




[RNAi_BEST]
feature       = RNAi_reagent:RNAi_primary experimental_result_region:cDNA_for_RNAi
key           = RNAi experiments (primary targets)
glyph         = segments
category      = Alleles, Variations, RNAi
bgcolor       = goldenrod
fgcolor       = black
height        = 4
label         = sub {
		my $f = shift;
		my $name   = $f->attributes('History_name');		
		my $string = $name ? $name : $f->name;
		return $string;
	}
description    = sub {
		my $f = shift;
		my $source = $f->attributes('Laboratory');
		my $string = $source ? "source lab: $source" : '';
		return $string;
	}
citation      = This track represents RNAi probes that have been aligned to the genome
                using a combination of BLAST and BLAT programs and have sequence identity
                to the target location of at least 95% over a stretch of at least 100 nt.
                Probes that satisfy these criteria are almost certain to produce RNAi
                effect on overlapping genes and the corresponding locations are usually
                the primary genomic targets of an RNAi experiment. Note that it is possible
                for a probe to have multiple primary targets within the genome. Click on the
                RNAi element to get more information about the experiment.

[RNAi_OTHER]
feature       = RNAi_reagent:RNAi_secondary
key           = RNAi experiments (secondary targets)
category      = Alleles, Variations, RNAi
glyph         = segments
bgcolor       = red
fgcolor       = black
height        = 4
label         = sub {
		my $f = shift;
		my $name   = $f->attributes('History_name');		
		my $string = $name ? $name : $f->name;
		return $string;
	}
description    = sub {
		my $f = shift;
		my $source = $f->attributes('Laboratory');
		my $string = $source ? "source lab: $source" : '';
		return $string;
	}
citation      = This track represents RNAi probes that have been aligned to the genome 
                using BLAST program and have sequence identity to the target location 
                from 80 to 94.99% over a stretch of at least 200 nt. Probes that satisfy
                these criteria may or may not produce RNAi effect on overlapping genes
                and the corresponding locations represent possible secondary 
                (unintended) genomic targets of an RNAi experiment. Click on the RNAi 
                element to get more information about the experiment.




################################################
#
# Category: SEQUENCE FEATURES
#
################################################


################################################
#
# Subcategory: Binding Sites
#
################################################

[CURATED_BINDING_SITES]
# EG WBsf047547 III:7816962..7816982
key          = Binding sites (curated)
category     = Sequence Features:Binding Sites & Regions
feature      = binding_site:binding_site     
glyph        = box
bgcolor      = green
link         = sub {
		my $f = shift;
		my ($name)   = $f->display_name;
		return "/get?name=$name;class=Feature";
	}
label       = 0
description  = 0
citation     = Sites where there is experimental evidence of a non-TF, non-Histone
               molecule binding.

[PREDICTED_BINDING_SITES]
key          = Binding sites (predicted)
category     = Sequence Features:Binding Sites & Regions
feature      = binding_site:PicTar
               binding_site:miRanda
               binding_site:cisRed
glyph        = box
bgcolor      = sub {
	my $f = shift;
	return 'blue' if $f->source eq 'PicTar';
	return 'red'  if $f->source eq 'miRanda';
	return 'green';
	}
link      = sub {
		my $f = shift;
		my %attributes  = $f->attributes();
		my ($note) = $attributes{Note};
		$note[0]  =~ /Predicted binding site for (.*)/;
		my $gene = $1;
		return "/get?name=$gene;class=Gene" if $gene;
		return "http://pictar.bio.nyu.edu/cgi-bin/new_PicTar_nematode.cgi?species=nematode" if $f->source eq 'PicTar';
		return "http://microrna.sanger.ac.uk/targets/v3/" if $f->source eq 'miRanda'; 
		return "/get?name=$name;class=Feature";
		return;
	}
label = sub {
	     my $f = shift;
	     my %attributes  = $f->attributes();
	     my ($note) = $attributes{Note};
	     return join("; ",@$note);
	     }
description = sub {
	    my $f = shift;
	    return $f->source;
           }
balloon hover = sub {
	        my $f    = shift;
		my $source = $f->source;		
		return "External data: See http://pictar.bio.nyu.edu/cgi-bin/new_PicTar_nematode.cgi?species=nematode" if $source eq 'PicTar';
		return "External data: See http://microrna.sanger.ac.uk/targets/v3/" if $source eq 'miRanda';				
		return;  # default to title
        }
citation     = This track shows curated and predicted binding sites for
               microRNAs. Binding sites (indicated in green) are extracted from the
               cisRed database of computationally derived potential bind
               targets. miRanda predictions -- indicated in red -- are the predicted
               target sequences for microRNA genes, provided by Anton Enright's group
               using the miRanda program. PicTar predictions -- indicated in blue --
               are the predicted target sequences for microRNA genes from Lall et al;
               A genome-wide map of conserved microRNA targets in C. elegans. Curr
               Biol. 2006 Mar 7;16(5):460-71.



[BINDING_REGIONS]
# EG: WBsf216878; III:7854473..7854493
key          = Binding regions
category     = Sequence Features:Binding Sites & Regions
feature      = binding_site:binding_site_region                    
glyph        = box
bgcolor      = green
link      = sub {
		my $f = shift;
		my $method = $f->method;
		my ($name)   = $f->name;
		return "/get?name=$name;class=Feature";
	}
label     = sub {
		my $f = shift;
		my ($name) = $f->name;
		return $name;
	}    
citation     = Regions within which there may be one or more binding sites of a
               non-TF, non-Histone molecule.


[HISTONE_BINDING_SITE_REGIONS]
# EG WBsf047038; III:7857561..7857581
key          = Histone binding sites
category     = Sequence Features:Binding Sites & Regions
feature      = histone_binding_site:histone_binding_site_region
glyph        = box
bgcolor      = green
link         = sub {
		my $f = shift;		
		my $name   = $f->name;
		return "/get?name=$name;class=Feature";
	}
label     = sub {
		my $f = shift;
		my $name   = $f->name;
		return $name;
	}    
citation     = Regions within which there is experimental evidence for one or more
               binding sites of a histone.



[PROMOTER_REGIONS]
# EG WBsf034281; I:5165237..5165257
key          = Promoter regions
category     = Sequence Features:Binding Sites & Regions
feature      = promoter:promoter
glyph        = box
bgcolor      = green
link         = sub {
		my $f = shift;		
		my $name   = $f->name;
		return "/get?name=$name;class=Feature";
	}
label     = sub {
		my $f = shift;
		my $name   = $f->name;
		return $name;
	}    
citation     = Regions within which there is experimental evidence for a promoter.


[REGULATORY_REGIONS]
# EG WBsf047577; V:8387251..8387261
key          = Regulatory regions
category     = Sequence Features:Binding Sites & Regions
feature      = regulatory_region:regulatory_region
glyph        = box
bgcolor      = green
link         = sub {
		my $f = shift;		
		my $name   = $f->name;
		return "/get?name=$name;class=Feature";
	}
label     = sub {
		my $f = shift;
		my $name   = $f->name;
		return $name;
	}    
citation     = Assorted or unspecified regulatory elements with experimental evidence.


[TRANSCRIPTION_FACTOR_BINDING_SITE]
# EG: WBsf047616, III:12550176..12550196
key           = Transcription factor binding sites
feature       = TF_binding_site:TF_binding_site
category     = Sequence Features:Binding Sites & Regions
glyph         = box
bgcolor       = green
fgcolor       = black
label         = sub {
	      my $f = shift;
	      my $name = $f->name;
	      return $name;
	      }
link         = sub {
		my $f = shift;		
		my $name   = $f->name;
		return "/get?name=$name;class=Feature";
	}
citation      = Sites where there is experimental evidence of a transcription factor
                binding site.


[TRANSCRIPTION_FACTOR_BINDING_REGION]
key           = Transcription factor binding regions
feature       = TF_binding_site:TF_binding_site_region
category     = Sequence Features:Binding Sites & Regions
glyph         = box
bgcolor       = green
fgcolor       = black
label         = sub {
	      my $f = shift;
	      my $name = $f->name;
	      return $name;
	      }
link         = sub {
		my $f = shift;		
		my $name   = $f->name;
		return "/get?name=$name;class=Feature";
	}
citation      = Regions within which there is experimental evidence of one or more
                binding sites of a transcription factor.



################################################
#
# Subcategory: Motifs
#
################################################
[DNAseI_HYPERSENSITIVE_SITE]
feature      = DNAseI_hypersensitive_site:DNAseI_hypersensitive_site
glyph        = box
category     = Sequence Features:Signals & Motifs
bgcolor      = green
key          = DNAseI hypersensitive site
link         = sub {
		my $f = shift;		
		my $name   = $f->name;
		return "/get?name=$name;class=Feature";
	}
label     = sub {
		my $f = shift;
		my $name   = $f->name;
		my $notes  = $f->notes;
		$notes     = $name if ($notes eq '');
		return "$notes";
	}    
citation     = DNAse I hypersensitive sites from the 2009 paper by Shi et al.


[G4_MOTIF]
feature       = G_quartet:pmid18538569
category      = Sequence Features:Signals & Motifs
bgcolor       = magenta
fgcolor       = black
height        = 7
connector     = none
key           = G4 Motif
citation      = This track shows the extent of G4 DNA signature. G4 motif is "Intrinsically mutagenic motif, probably
         because it can form secondary structures during DNA replication". Data are from Kruisselbrink E et al. (2008)
         Curr Biol "Mutagenic Capacity of Endogenous G4 DNA Underlies Genome Instability in ....".











################################################
#
# Subcategory: Translated Features
#
################################################

[PROTEIN_MOTIFS]
# example: motif:homt-1-pfam.1
#include includes/protein_motifs.track


[MASS_SPEC]
# Individual spans
feature      = translated_nucleotide_match:mass_spec_genome
key           = Mass spec peptides
category      = Sequence Features: Translated Features
glyph         = segments
draw_target   = 1
show_mismatch = 1
ragged_start  = 1
connector     = dashed
connector_color = gray
fgcolor       = black
bgcolor       = sub {
		my $feature = shift;
		my $name = $feature->name;
		return 'red';
	}
link          = sub { my $f   = shift;
                my $name = $f->name;
                return "/get?name=$name;class=Mass_spec_peptide";
        }
height        = 7
label         = sub { 
		my $f = shift;
		my $name = $f->name;
		$name =~ s/^MSP://;
		return $name;
	}
#group_pattern = /^Mass_spec_peptide:[.*]/
description  = sub { return undef; }
#description = sub { 
#		my $f = shift;
#		my $exons = $f->attributes('Exons_covered');
#		return $exons;
#}
#title   = sub {
#		my $f = shift;
#		return $f->attributes('Exons_covered');
#	}
citation      = This track shows peptides identified in mass spec proteomics
                experiments.





################################################
#
# Category: Expression
#
################################################




[SAGE]
key           = SAGE tags
category      = Expression
feature       = SAGE_tag:SAGE_tag
glyph	      = transcript2
arrow_length  = 2
orient        = sub {
	          my $f = shift;
		  return $f->strand > 0 ? 'E' : 'W';
                }
strand_arrow  = 1
height        = 7
description   = sub {
		  my $f = shift;
		  return 0 if $f->source eq 'SAGE_tag';
		  my $name = $f->name;
		  $name =~ s/SAGE://;
	  	  return $name;
	  	}
bgcolor       = sub {
                  my $f = shift;
		  return 'lightgrey' if $f->source eq 'SAGE_tag';                
		  return $f->strand > 0 ? 'violet' : 'turquoise';
	       }
fgcolor       = sub {
                  my $f = shift;
                  return 'lightgrey' if $f->source eq 'SAGE_tag';
                  return $f->strand > 0 ? 'violet' : 'turquoise';
               }
label         = sub {
		  my $f = shift;
	          return '' if $f->source eq 'SAGE_tag';
		  my ($cnt)  = $f->attributes('count');
	          my ($gene) = $f->attributes('Gene', 'Transcript', 'Pseudogene');
		  return "$gene count:$cnt" if $gene && $cnt; 
  		}
link          = sub {
                  my $f = shift;
	          my $name = $f->name;
	          return "/db/seq/sage?name=$name;class=SAGE_tag";
               }
citation      = This track indicates the location of Serial Analysis of Gene Expression (SAGE)
        patterns associated with a tag and its associated genes.  Tags shown in grey are
	either unambiguously mapped to a gene elsewhere or are ambigous due to multiple occurences
	in genomic or trascript sequences.  Colored tags are mapped unambiguously to a single
        gene or genomic location.  Violet and turquoise refer to the plus strand and minus 
        strands, respectively.  The number shown above tags is the total number of times
        this tag was observed in all SAGE experiments.

[SAGE:7001]
arrow_length  = 3

[SAGE:10001]
arrow_length  = 5
label         = sub {
                  my $f = shift;
                  return 0 if $f->source eq 'SAGE_tag';
                  my ($cnt) = $f->attributes('count');
		  return "$cnt "; #must not be '1'
                }


[EXPRESSION_CHIP_PROFILE]
feature       = experimental_result_region:Expr_profile
category      = Expression
bgcolor       = orange
fgcolor       = black
height        = 4
key           = Expression chip profiles
citation      = This track indicates the location of PCR products that have been placed on
	expression chips produced by the C. elegans Microarray Consortium [
	<a href="http://cmgm.stanford.edu/~kimlab/wmdirectorybig.html">http://cmgm.stanford.edu/~kimlab/wmdirectorybig.html</a>]. 
	The genes corresponding to these products have been clustered by their
	expression patterns.  Click on the profile to get more information about the expression
	profile of its corresponding gene.


[EXPRESSION_PATTERNS]
key           = Expression patterns
category      = Expression
feature       = reagent:Expr_pattern
glyph         = sub {
		  my $name = shift->name;
		  my $png = -e "/usr/local/wormbase/website-shared-files/images/expression/assembled/$name.png";
	          return $png ? 'image' : 'span';
                }
glyph_delegate = span
image         = sub {
                  my $f = shift;
                  my $flip = $f->strand > 0 ? ';flip=1' : '';
                  my $name = $f->name;	
                  "/db/gene/expression?name=$name;draw=1;thumb=250$flip";
                }
link          = /get?name=$name;class=Expr_pattern
balloon hover = sub {
	          my $name   = shift->name;
		  my $length = shift->length;
		  my $png = -e "/usr/local/wormbase/website-shared-files/images/expression/assembled/$name.png";
                  my $cartoon = $length > 99999 && $png ? ';cartoon=1' : '';
		  "url:/gbrowse_popup?name=$name;type=EXPR_PATTERN$cartoon";
		}
bgcolor       = silver
fgcolor       = black
height        = 8
fontcolor     = blue
label         = sub {
                  my $f = shift;
#                  my $ace = ElegansSubs::OpenDatabase();
#                  my $obj = $ace->fetch($f->class => $f->name);
#                  my ($gene) = ElegansSubs::Bestname($obj->Gene);
#                  my ($construct) = $obj->Transgene;
#                  $gene .= " ($construct)" if $construct;
#                  $gene;
                }
citation      = This track represents sequences that were used for in vivo expression pattern analysis,
                such as promoter sequences for GFP or LacZ constructs.  Colored areas in the worm
                image represent approximate regions where adult or late larval expression has been
                documented via Anatomy Ontology terms.  The strand of the sequence (promoter) region
                used is indicated by color in the same way as genes, where violet is the forward
                strand and turqoise is the reverse strand.  Clicking on the worm image will take you
                to a detailed view of the expression pattern.


[EXPR_PATTERN:40000]
image         = sub {"/db/gene/expression?draw=1;thumb=225;name=".shift->name}
[EXPR_PATTERN:60000]
image         = sub {"/db/gene/expression?draw=1;thumb=200;name=".shift->name}
[EXPR_PATTERN:80000]
image         = sub {"/db/gene/expression?draw=1;thumb=175;name=".shift->name}
[EXPR_PATTERN:100000]
glyph         = span


# [RNASeq tracks]
#include includes/rna_seq.conf


[POLYSOMES]
key          = Polysomes
category     = Expression
feature      = mRNA_region:Polysome_profiling
glyph        = box
bgcolor      = green
link         = sub {
		my $f = shift;		
		my $name   = $f->name;
		return "/get?name=$name;class=Feature";
	}
label     = sub {
		my $f = shift;
		my $name   = $f->name;
		my $notes  = $f->notes;
		$notes     = $name if ($notes eq '');
		return "$notes";
	}    
citation     = This data is from the The Lamm et al. (2011) PMID: 21177965 paper
               finding regions bound by the polysome fraction of RNAs being actively
               translated.


################################################
#
# Category: Genome structure
#
################################################


################################################
#
# Subcategory: Assembly & Curation
#
################################################

[GENOME_SEQUENCE_ERRORS]
# EG: WBsf267823, III: 13536936
key           = Genome sequence errors
feature       = possible_base_call_error:RNASeq
category      = Genome Structure:Assembly & Curation
glyph         = box
bgcolor       = red
fgcolor       = black
label         = sub {
	      my $f = shift;	      
	      my $name = $f->name;
	      return $f->name;
	      }
citation      = Positions within the reference genome sequence that have been
                identified as having a base call error. This error has not yet been
                corrected.


[CORRECTED_GENOME_SEQUENCE_ERRORS]
# EG: WBsf047679; III:10553079..10553089
key           = Genome sequence corrections
feature       = base_call_error_correction:RNASeq
category      = Genome Structure:Assembly & Curation
glyph         = box
bgcolor       = green
fgcolor       = black
label         = sub {
	      my $f = shift;	      
	      my $name = $f->name;
	      return $f->name;
	      }
citation      = Positions within the reference genome sequence that were previously
                identified as having a base call error. This error has now been
                corrected.


[LINKS_AND_SUPERLINKS]
key           = Links and Superlinks
category      = Genome Structure:Assembly & Curation
feature       = assembly_component:Genomic_canonical assembly_component:Link
fgcolor       = black
glyph         = arrow
das category  = structural
height        = 7
tick          = 2
relative_coords = 1
citation      = This track shows the location and coordinates of contigs
	        created during the assembly of the C. elegans genome.

[GENBANK]
feature       = assembly_component:Genbank
glyph         = arrow
key           = Genbank submissions
category      = Genome Structure:Assembly & Curation
tick          = +2
base          = 1
relative_coords = 1
fgcolor       = sienna
link          = http://www.ncbi.nlm.nih.gov:80/entrez/query.fcgi?cmd=Search&db=Nucleotide&doptcmdl=GenBank&term=$name[accn]
# link          = ../gbrowse_moby?id=$name;source=$class
citation      = The C. elegans genome was submitted to the GenBank and EMBL databases in
     	        in the form of a set of minimally-overlapping segments.  This track shows the
	        position of these accessioned entries.

[CANONICAL]
feature       = assembly_component:Genomic_canonical
fgcolor       = sienna
glyph         = arrow
das category  = similarity
category      = Genome Structure:Assembly & Curation
label         = sub {
		my $f = shift;
		my $note = $f->attributes('Note');
	        my ($gb) = $note =~ /Genbank\s+(\S+)/;
		my $retval = $f->name;
		$retval .= " (Genbank $gb)" if $gb;
               }
height        = 7
tick          = 2
relative_coords = 1
key           = Contig submissions
citation      = This track shows the location and coordinates of contigs
        (mostly cosmids) submitted to GenBank/EMBL.
link          = sub {
                my $f = shift;
                my $note = $f->attributes('Note');
                my ($gb) = $note =~ /Genbank\s+(\S+)/;
                $gb || return undef;
		"http://www.ncbi.nlm.nih.gov:80/entrez/query.fcgi?cmd=Search&db=Nucleotide&doptcmdl=GenBank&term=${gb}[accn]";
                }

[SEGMENTAL_DUPLICATIONS]
feature       = duplication:segmental_duplication
category      = Genome Structure
glyph         = box
bgcolor       = white
fgcolor       = black
label         = sub {
	      my $f = shift;
	      return $f->notes || $f;
	      }
key           = Segmental duplication
citation      = Polymorphic segmental duplication as defined by the tool OrthoCluster. This feature represents one sequence from a pair of duplicons in the N2 genome.



################################################
#
# Subcategory: Repeats
#
################################################

# [REPEATS]
#include includes/repeats.conf




################################################
#
# Category: Transcription
#
################################################

# Transcription products
#include includes/transcription_products.tracks


[TRANSCRIPTION_START_SITE]
feature       = TSS:RNASeq
category      = Transcription:Signals
glyph         = box
bgcolor       = white
fgcolor       = black
label         = sub {
	      my $f = shift;
	      return $f->notes || $f;
	      }
key           = Transcription start site
citation      = Transcription_start_site defined by analysis of RNASeq short read datasets (example Hillier et al.)

[TRANSCRIPTION_END_SITE]
feature       = transcription_end_site:RNASeq
category      = Transcription:Signals
glyph         = box
bgcolor       = white
fgcolor       = black
label         = sub {
	      my $f = shift;
	      return $f->notes || $f;
	      }
key           = Transcription end site
citation      = Transcription_end_site defined by analysis of RNASeq short read datasets (example Hillier et al.)


# [TECRED_TAGS]
#include includes/tec_red_tags.track

[MICRO_ORF]
feature      = five_prime_open_reading_frame:micro_ORF
glyph        = box
category     = Transcription:Supporting Evidence
bgcolor      = green
key          = Micro ORF
link         = sub {
		my $f = shift;		
		my $name   = $f->name;
		return "/get?name=$name;class=Feature";
	}
label     = sub {
		my $f = shift;
		my $name   = $f->name;
		my $notes  = $f->notes;
		$notes     = $name if ($notes eq '');
		return "$notes";
	}    
citation     = The location of micro ORFs with experimental evidence.


[ORFEOME_PCR_PRODUCTS]
key           = ORFeome PCR Products
category      = Transcription:Supporting Evidence
feature       = PCR_product:Orfeome
glyph         = sub {
		my $f = shift;
		return 'primers' if $f->method eq 'PCR_product';
		return 'box';
	}	
height        = 4
fgcolor       = black
connect       = 1
#connect_color = \&ostp_color
#font2color    = \&ostp_color
#fgcolor       = \&ostp_color
#description   = \&ostp_amplifies
citation      = This track contains Orfeome Project primer pairs and RACE tags.  These primers were used to amplify
	C. elegans cDNAs.  A positive amplification, shown in green, is evidence that the region
	between the two primers is transcribed.  Failure to amplify, shown in red, suggests
	either that the gene model is incorrect, or that the gene is expressed at very low levels.
	Detailed gene models derived from ORFeome sequencing will be added to this display in
	the future.  See <i>Reboul et al. Nat. Genet. 2003 Apr 7.</i> and 
	<a href="http://worfdb.dfci.harvard.edu" target="_blank">WORFdb</a> for further information.

[TRANSCRIPTION_FACTOR_BINDING_REGION]
feature       = transcribed_fragment:TranscriptionallyActiveRegion
category      = Transcription:Supporting Evidence
glyph         = box
bgcolor       = green
fgcolor       = black
label         = sub {
	      my $f = shift;
	      my $name = $f->name;
	      my $notes = $f->notes;
	      return "$notes";
	      }
key           = Transcriptionally Active Region
citation      = Transcriptionally Active Regions (TARs) found by the Miller lab from tiling-array projects run as part of the modENCODE project.



[OST]
key           = C.elegans OSTs
category      = Transcription:Supporting Evidence
feature       = expressed_sequence_match:BLAT_OST_BEST
glyph         = segments
draw_target   = 1
show_mismatch = 1
ragged_start  = 1
height        = 5
fgcolor       = black
connector     = solid
group_pattern = /^OST[RF]/
description   = OST
link = sub {
    my $feature = shift;
    my $name = $feature->name;
    $name =~ s/^OST[FR](10|30)/$1/;
    $name =~ s/^OST[FR]/10/;
    $name =~ s/_\d*//;
    $name =~ s/([A-Z]+\d+)$/\@$1/;
    return qq[http://worfdb.dfci.harvard.edu/searchallwormorfs.pl?by=plate&sid=$name];
  }
label       = 1
link_target = _blank
citation    = <a href="http://worfdb.dfci.harvard.edu/">ORFeome project</a> sequence reads.
              The ORFeome project designs primer assays for spliced C. elegans mRNAs and then performs 
              sequence reads on rtPCR material, producing "OSTs." This track shows ORFeome project 
              OSTs aligned to the genome using 
              <a href="http://genome.cse.ucsc.edu/cgi-bin/hgBlat">BLAT</a>. This track shows the 
              best unique location for each OST.


[RST]
key           = C.elegans RSTs
category      = Transcription:Supporting Evidence
feature       = expressed_sequence_match:BLAT_RST_BEST
glyph         = segments
strand_arrow  = 1
draw_target   = 1
show_mismatch = 1
ragged_start  = 1
height        = 5
fgcolor       = black
bgcolor       = sub {
    my $f = shift;
    return 'green' if $f->name =~ /RST5/;
    return 'red';
  }
connector     = solid
group_pattern = /^OST[RF]/
label         = 1
description   = sub {
    my $f = shift;
    return "5' RST" if $f->name =~ /RST5/;
    return "3' RST" if $f->name =~ /RST3/;
  }
citation = The submitted RACE data come from cloning and sequencing of 5' and 3' C.elegans RACE 
           PCR products. The experiments were done using RNA isolated from "mix stage"
           wild-type N2 worms. SL1 and SL2 were used as 5' universal primers for 5'RACE
           experiments. The "RST's" (i.e., RACE Sequence Tags), are 5' reads from cloned RACE 
           products (sequenced as minipools). Sequences are vector trimmed then quality trimmed 
           (SL sequences are not removed from 5' RST's). In quality trimming, the first sliding
           window of 20 nt long with an average quality score higher than 15 marks the
           start of good quality sequences. Likewise, the first sliding window of 20 nt
           with average quality score lower than 15 marks the end of good quality
           sequences.

           Each RST is identified as being 5' or 3'(indicated as 5-RST or 3-RST) followed
           by a unique trace ID (e.g., >CCSB_5-RST_373657). 1,355 5' and 1589 3' RSTs are
           included in this submission. Data provided by Kourosh Salehi-Ashtiani, Vidal Lab.

           For information on the project, please see the
           <a href="http://worfdb.dfci.harvard.edu/index.php?page=race">Race Project Page</a>
           at <a href="http://worfdb.dfci.harvard.edu/">WorfDB</a>.

# -- programmatically built to here




################################################
#
# Category: Sequence similarity
#
################################################

################################################
#
# Subcategory: nucleotide
#
################################################

# Nucleotide sequence similarity tracks
#include includes/sequence_similarity-nucleotide.track


################################################
#
# Subcategory: protein
#
################################################

# Nucleotide sequence similarity tracks
#include includes/sequence_similarity-proteins.track


################################################
#
# Category: Reagents
#
################################################

[PROMOTEROME_PCR_PRIMERS]
key           = Promoterome PCR products
feature       = PCR_product:Promoterome
bgcolor       = violet
glyph         = primers
category      = Reagents
fgcolor       = black
connect       = 1
connect_color = cyan
citation      = This track indicates the location of primer pairs for the <a href="http://vidal.dfci.harvard.edu/promoteromedb/">Promoterome project</a>.

[MICROARRAY_OLIGO_PROBES]
key           = Microarray oligo probes
feature       = reagent:Oligo_set
glyph         = primers
category      = Reagents
height        = 4
fgcolor       = black
connect       = 1
connect_color = black
font2color    = black
fgcolor       = black
citation      = This track contains Affymetrix GeneChip and Washington University GSC microarray probe sets.

# This is an aggregated track of ALL PCR_products (promoterome, orfeome, etc)
[PCR_PRODUCTS]
key           = PCR Assays
feature       = PCR_product
bgcolor       = violet
glyph         = primers
category      = Reagents
fgcolor       = black
connect       = 1
connect_color = cyan
citation      = This track indicates the location of primer pairs that have been created by a number
	of groups.  Click on the element to obtain the left and right oligo sequences, information
	about the amplification information, and ordering information (if available). 



[CLONE]
feature       = region:Vancouver_fosmid 
	        assembly_component:Genomic_canonical	      
fgcolor       = sub {
		my $feature = shift;
		return 'aqua' if !defined $feature->start || !defined $feature->stop;
		return 'black';
	}
das category   = structural
category      = Reagents
glyph         = anchored_arrow
height        = 7
key           = YACs, Fosmids, & Cosmids
font2color    = aqua
description   = sub {
		my $feature = shift;
		return 'Warning: Clone end(s) not known/shown.'
			unless defined $feature->start && defined $feature->end;
		1;
	}
title         = sub {
		my $f = shift;
			my $start = $f->start;
			my $ref = $f->ref;
			my $stop = $f->stop;
			my $name = $f->name;
		if ($f->source eq 'Vancouver_fosmid') {
			return "Vancouver fosmid: $name $ref:$start..$stop";
		}
		$start ||= '-';
		$stop  ||= '-';
		return "YACs, Fosmids, & Cosmids: $name $ref:$start..$stop";
	}
citation      = This track shows the locations of the cosmids, fosmids, and YACs used for the
	physical mapping and sequencing of the C. elegans genome.  The clone termini
	do not necessarily correspond to the termini of submitted GenBank/EMBL entries.
	In some cases the exact termini of the clones is not known.  For example, YACs
	were sequenced using PCR amplification across gaps in the cosmid maps.  When
	a clone end is not known, it is shown as an arrow extending to the end of the 
	display.  Such data is to be treated with caution.  The Vancouver fosmids can be ordered directly 
        from <a href="http://www.geneservice.co.uk/products/clones/Celegans_Fos.jsp">GeneService</a>.






################################################
#
# Category: nGASP - all these data are gone?
#
# config not yet updated for GFF3
#
################################################



[AUGUSTUS_NGASP]
feature      = ngasp_gene:nGASP_AUGUSTUS
label        = 1
description  = 1
key          = nGASP AUGUSTUS gene predictions
#glyph        = wormbase_transcript
glyph        = transcript2
category     = nGASP Genes
title        = AUGUSTUS gene $name
citation     = AUGUSTUS gene set from the nGASP competition.  Courtesy of Mario Stanke.
               Gene models are available for download at ftp.wormbase.org/pub/wormbase/nGASP

[mGENE_NGASP]
feature      = ngasp_gene:nGASP_mGENE
label        = 1
description  = 1
key          = nGASP mGENE gene predictions
glyph        = wormbase_transcript
category     = nGASP Genes
title        = mGENE gene $name
citation     = mGENE gene set from the nGASP competition.  Courtesy of Gabriele Schweikert and Gunnar Raetsch.
               Gene models are available for download at ftp.wormbase.org/pub/wormbase/nGASP

[FGENESHN_NGASP]
feature      = ngasp_gene:nGASP_FGENESH
label        = 1
description  = 1
key          = nGASP FGENESH gene predictions
glyph        = wormbase_transcript
category     = nGASP Genes
title        = FGENESH++ gene $name
citation     = FGENESH++ gene set from the nGASP competition.  Courtesy of Darin Blasiar.
               Gene models are available for download at ftp.wormbase.org/pub/wormbase/nGASP
[JIGSAW_NGASP]
feature      = ngasp_gene:nGASP_jigsaw
label        = 1
description  = 1
key          = nGASP JIGSAW combined genes
glyph        = wormbase_transcript
category     = nGASP Genes
title        = JIGSAW gene $name
citation     = JIGSAW gene set from the nGASP competition.  This is the combined gene set for AUGUSTUS
               mGENE and FGENESH++.  Courtesy of Darin Blasiar.
               Gene models are available for download at ftp.wormbase.org/pub/wormbase/nGASP


################################################
#
# Category: modENCODE
#
################################################

## LIEB TRACKS:
# include modencode/lieb/*.conf

## HENIKOFF TRACKS:
# include modencode/henikoff/*.conf

## PIANO TRACKS:
# include modencode/piano/*.conf

## SNYDER TRACKS:
# include modencode/snyder/*.conf

## WATERSTON TRACKS:
# include modencode/waterston/*.conf
