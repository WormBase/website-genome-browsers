[GENES_PSEUDOGENES]
key          = Genes (pseudogenes)
category     = Genes
feature = pseudogenic_transcript:WormBase pseudogenic_rRNA:WormBase pseudogenic_tRNA:WormBase
glyph = gene
title = sub {
	 my $f = shift;
	 return "Curated pseudogene " . $f->display_name . "<br /><i>click for details";
	 }
link = sub {
        my $f = shift;
        my $name = $f->attributes('Gene') || $f->name; 
        return "/get?name=$name;class=Gene";
        }
label = sub { 
        my $f = shift;
        my ($locus)  = $f->attributes('Alias');
        my ($name)   = $f->display_name;
	if ($name eq $locus) {
		    return $name;
	} else {
		    return $locus ? "$locus ($name)" : $name;
        }       
        }
description  = sub {             
        my $f = shift;
        my $type = $f->type;
        $type =~ s/_/ /g;
        $type =~ s/:WormBase//;
        return $type;
       }
bgcolor = sub {
        my($feature,$option_name,$part_no,$total_parts,$glyph) = @_;
        my $type = $glyph->parent_feature->type;
        if ($type =~ /rRNA/) {return 'darkslategray';}
        if ($type =~ /tRNA/) {return 'silver';}
        return 'gray';
        }
fgcolor      = black
utr_color    = gray
font2color   = blue
height  = sub {
        my $f = shift;
        # Component parts:
        # ncRNAs : gene > ncRNA > exon
        # coding : gene > mRNA > CDS
        return $f->type =~ /mRNA|CDS|UTR/i ? 10 : 6;
        }
balloon hover  = sub {
	my $f = shift;

	my ($transcript) = $f->display_name; 
	my ($locus)  = $f->attributes('Alias');
		
	my @return;
	if ($transcript && $locus) {
	       push @return,"<b>$locus ($transcript)</b>";
	} else {
	       push @return,"<b>$transcript</b>";
        }    
	push @return,"<i>click to view Gene Report</i>";        
	return join("<br />",@return);
     }
citation = A subset of the full Curated Genes set limited to pseudogenes only.

[GENES_PSEUDOGENES:150000]
glyph        = transcript
strand_arrow = 1
bgcolor      = sub {shift->strand>0?'violet':'turquoise'}
description  = 0
