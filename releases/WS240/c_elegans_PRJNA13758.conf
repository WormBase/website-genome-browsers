#####################################################
#
# NOTE! This configuration file was programmatically
# generated.  You can edit this in-place for testing
# purposes but all changes will
# need to be moved to CreateGBrowseConfigFiles.pm
#
#####################################################
[Aligner:plugin]
upcase_tracks = CDS tRNA NG
alignable_tracks = ESTB ESTO mRNAB
align_default = ESTB
upcase_default = CDS


[BINDING_REGIONS]
link = sub { my $f = shift;
 my $method = $f->method;
 my ($name)   = $f->name;
 return "/get?name=$name;class=Feature";
 }

key = Binding regions
feature = binding_site:binding_site_region
bgcolor = green
category = Sequence Features:Binding Sites & Regions
label = sub { my $f = shift;
 my ($name) = $f->name;
 return $name;
 }

glyph = box
citation = Regions within which there may be one or more binding sites of a non-TF, non-Histone molecule.


[BINDING_SITES_CURATED]
link = sub { my $f = shift;
 my ($name)   = $f->display_name;
 return "/get?name=$name;class=Feature";
 }

description = 0
key = Binding sites (curated)
feature = binding_site:binding_site
bgcolor = green
category = Sequence Features:Binding Sites & Regions
label = 0
glyph = box
citation = Sites where there is experimental evidence of a non-TF, non-Histone molecule binding.


[BINDING_SITES_PREDICTED]
link = sub { my $f = shift;
 my %attributes  = $f->attributes();
 my ($note) = $attributes{Note};
 $note[0]  =~ /Predicted binding site for (.*)/;
 my $gene = $1;
 return "/get?name=$gene;class=Gene" if $gene;
 return "http://pictar.bio.nyu.edu/cgi-bin/new_PicTar_nematode.cgi?species=nematode" if $f->source eq 'PicTar';
 return "http://microrna.sanger.ac.uk/targets/v3/" if $f->source eq 'miRanda';
 return "/get?name=$name;class=Feature";
 return;
 }

balloon hover = sub { my $f    = shift;
 my $source = $f->source;
 return "External data: See http://pictar.bio.nyu.edu/cgi-bin/new_PicTar_nematode.cgi?species=nematode" if $source eq 'PicTar';
 return "External data: See http://microrna.sanger.ac.uk/targets/v3/" if $source eq 'miRanda';
 return;
 }

description = sub { my $f = shift;
 return $f->source;
 }

key = Binding sites (predicted)
feature = binding_site:PicTar binding_site:miRanda binding_site:cisRed
bgcolor = sub { my $f = shift;
 return 'blue' if $f->source eq 'PicTar';
 return 'red'  if $f->source eq 'miRanda';
 return 'green';
 }

category = Sequence Features:Binding Sites & Regions
label = sub { my $f = shift;
 my %attributes  = $f->attributes();
 my ($note) = $attributes{Note};
 return join("; ",@$note);
 }

glyph = box
citation = This track shows curated and predicted binding sites for microRNAs. Binding sites (indicated in green) are extracted from the cisRed database of computationally derived potential bind targets. miRanda predictions -- indicated in red -- are the predicted target sequences for microRNA genes, provided by Anton Enright's group using the miRanda program. PicTar predictions -- indicated in blue -- are the predicted target sequences for microRNA genes from Lall et al; A genome-wide map of conserved microRNA targets in C. elegans. Curr Biol. 2006 Mar 7;16(5):460-71.


[CDS]
frame2f = darkblue
frame0r = darkred
require_subparts = 1
height = 13
description = 0
key = Coding Segments
frame0f = cadetblue
feature = CDS:WormBase CDS:WormBase_imported
label = sub { my $feature = shift;
 my $ids = join(", ", $feature->load_id);
 $ids =~ s/CDS://g;
 return "Frame usage for " . $ids;
 }

category = Genes
frame1r = red
citation = This track shows the reading frames of coding segments (also known as "CDS" features).
glyph = cds
frame1f = blue
frame2r = crimson


[DETAIL SELECT MENU]
width = 260
html = <table style="width:100%"> <tr> <th style="background:lightsteelblue;cell-padding:5"> SELECTION <span style="right:0px;position:absolute;color:blue;cursor:pointer" onclick="SelectArea.prototype.cancelRubber()"> [X] </span> </th> </tr> <tr> <td> <a href="javascript:SelectArea.prototype.clearAndSubmit()"> Zoom in </a> </td> </tr> <tr> <td onmouseup="SelectArea.prototype.cancelRubber()"> <a href="?plugin=FastaDumper;plugin_action=Go;name=SELECTION" target="_new"> Dump selection as FASTA </a> </td> </tr> <tr> <td onmouseup="SelectArea.prototype.cancelRubber()"> <a href="http://modencode.oicr.on.ca/cgi-bin/gb2/gbrowse/worm/?name=SELECTION" target="_new"> Browse selection at modENCODE </a> </td> </tr> <tr> <td onmouseup="SelectArea.prototype.cancelRubber()"> <a href="http://genome.ucsc.edu/cgi-bin/hgTracks?clade=worm&org=C.+elegans&db=ce4&position=chrSELECTION&pix=620&Submit=submit" target="_new"> Browse selection at UCSC </a> </td> </tr> <tr> <td onmouseup="SelectArea.prototype.cancelRubber()"> <a href="?name=SELECTION;plugin=Submitter;plugin_do=Go;Submitter.target=UCSC_BLAT" target="_new"> BLAT this sequence </a> </td> </tr> <tr> <td onmouseup="SelectArea.prototype.cancelRubber()"> <a href="?name=SELECTION;plugin=Submitter;plugin_do=Go;Submitter.target=NCBI_BLAST" target="_new"> BLAST this sequence </a> </td> </tr> </table>


[DNA/GC Content]
global feature = 1
fgcolor = red
strand = both
category = DNA
height = 40
glyph = dna


[DNASEI_HYPERSENSITIVE_SITE]
link = sub { my $f = shift;
 my $name   = $f->name;
 return "/get?name=$name;class=Feature";
 }

key = DNAseI hypersensitive site
feature = DNAseI_hypersensitive_site:DNAseI_hypersensitive_site
bgcolor = green
category = Sequence Features:Signals & Motifs
label = sub { my $f = shift;
 my $name   = $f->name;
 my $notes  = $f->notes;
 $notes     = $name if ($notes eq '');
 return "$notes";
 }

glyph = box
citation = DNAse I hypersensitive sites from the 2009 paper by Shi et al.


[EST_BEST]
draw_target = 1
ragged_start = 1
height = 5
key = ESTs (best)
feature = expressed_sequence_match:BLAT_EST_BEST
group_pattern = /\.[35]$/
mismatch_color = yellow
bgcolor = limegreen
fgcolor = black
das category = transcription
category = Transcription:Supporting Evidence
connector = solid
show_mismatch = 1
glyph = segments
citation = Native (same-species) Expressed Sequence Tags (ESTs), aligned to the genome using <a href="http://genome.cse.ucsc.edu/cgi-bin/hgBlat">BLAT</a>. This track shows the best unique location for each EST. Other EST matches, some of which may represent repetitive elements, are shown in the track labeled "ESTs (other)". The paired 5' and 3' ESTs from the same cDNA clone are connected by a dashed line.


[EST_BEST:50000]
glyph = box


[EST_OTHER]
show_mismach = 1
draw_target = 1
ragged_start = 1
height = 6
key = ESTs (other)
feature = expressed_sequence_match:BLAT_EST_OTHER
group_pattern = /\.[35]$/
bgcolor = lightgray
fgcolor = black
category = Transcription:Supporting Evidence
connector = solid
glyph = segments
citation = Native (same-species) Expressed Sequence Tags (ESTs), aligned to the genome using <a href="http://genome.cse.ucsc.edu/cgi-bin/hgBlat">BLAT</a>. This track shows ESTs that align multiple times, some of which represent repetitive regions. For the "best" match, see the track labeled "ESTs (best)". The paired 5' and 3' ESTs from the same cDNA clone are connected by a dashed line.


[EST_OTHER:50000]
glyph = box


[EXPRESSION_CHIP_PROFILES]
feature = experimental_result_region:Expr_profile
bgcolor = orange
fgcolor = black
category = Expression
height = 4
key = Expression chip profiles
citation = This track indicates the location of PCR products that have been placed on expression chips produced by the C. elegans Microarray Consortium [ <a href="http://cmgm.stanford.edu/~kimlab/wmdirectorybig.html">http://cmgm.stanford.edu/~kimlab/wmdirectorybig.html</a>]. The genes corresponding to these products have been clustered by their expression patterns.  Click on the profile to get more information about the expression profile of its corresponding gene.


[EXPRESSION_PATTERNS]
link = /get?name=$name;class=Expr_pattern
balloon hover = sub { my $name   = shift->name;
 my $length = shift->length;
 my $png = -e "/usr/local/wormbase/website-shared-files/images/expression/assembled/$name.png";
 my $cartoon = $length > 99999 && $png ? ';cartoon=1' : '';
 "url:/gbrowse_popup?name=$name;type=EXPR_PATTERN$cartoon";
 }

height = 8
fontcolor = blue
key = Expression patterns
image = sub { my $f = shift;
 my $flip = $f->strand > 0 ? ';flip=1' : '';
 my $name = $f->name;
 "/db/gene/expression?name=$name;draw=1;thumb=250$flip";
 }

feature = reagent:Expr_pattern
glyph_delegate = span
bgcolor = silver
fgcolor = black
category = Expression
label = sub { my $f = shift;
 }

glyph = sub { my $name = shift->name;
 my $png = -e "/usr/local/wormbase/website-shared-files/images/expression/assembled/$name.png";
 return $png ? 'image' : 'span';
 }

citation = This track represents sequences that were used for in vivo expression pattern analysis, such as promoter sequences for GFP or LacZ constructs.  Colored areas in the worm image represent approximate regions where adult or late larval expression has been documented via Anatomy Ontology terms.  The strand of the sequence (promoter) region used is indicated by color in the same way as genes, where violet is the forward strand and turqoise is the reverse strand.  Clicking on the worm image will take you to a detailed view of the expression pattern.


[EXPRESSION_PATTERNS:100000]
glyph = span


[EXPRESSION_PATTERNS:40000]
image = sub {"/db/gene/expression?draw=1;thumb=225;name=".shift->name}


[EXPRESSION_PATTERNS:60000]
image = sub {"/db/gene/expression?draw=1;thumb=200;name=".shift->name}


[EXPRESSION_PATTERNS:80000]
image = sub {"/db/gene/expression?draw=1;thumb=175;name=".shift->name}


[G4_MOTIF]
height = 7
key = G4 Motif
feature = G_quartet:pmid18538569
bgcolor = magenta
fgcolor = black
category = Sequence Features:Signals & Motifs
connector = none
citation = This track shows the extent of G4 DNA signature. G4 motif is "Intrinsically mutagenic motif, probably because it can form secondary structures during DNA replication". Data are from Kruisselbrink E et al. (2008) Curr Biol "Mutagenic Capacity of Endogenous G4 DNA Underlies Genome Instability in ....".


[GENBANK_ENTRIES]
base = 1
link = http://www.ncbi.nlm.nih.gov:80/entrez/query.fcgi?cmd=Search&db=Nucleotide&doptcmdl=GenBank&term=$name[accn]
key = Genbank submissions
feature = assembly_component:Genbank
fgcolor = sienna
relative_coords = 1
category = Genome Structure:Assembly & Curation
tick = +2
glyph = arrow
citation = The C. elegans genome was submitted to the GenBank and EMBL databases in in the form of a set of minimally-overlapping segments.  This track shows the position of these accessioned entries.


[GENES_NONCODING]
link = sub { my $f = shift;
 my $name = $f->attributes('Gene') || $f->name;
 return "/get?name=$name;class=Gene";
 }

utr_color = gray
balloon hover = sub { my $f = shift;
 my ($transcript) = $f->display_name;
 my ($locus)  = $f->attributes('locus');
 my @return;
 if ($transcript && $locus) {
 push @return,"<b>$locus ($transcript)</b>";
 } else {
 push @return,"<b>$transcript</b>";
 }
 push @return,"<i>click to view Gene Report</i>";
 return join("<br />",@return);
 }

description = sub { my $f = shift;
 my $type = $f->type;
 return $f->method;
 }

height = sub { my $f = shift;
 return $f->type =~ /mRNA|CDS|UTR/i ? 10 : 6;
 }

key = Curated Genes (noncoding)
feature = miRNA:WormBase ncRNA:WormBase rRNA:WormBase scRNA:WormBase snRNA:WormBase snoRNA:WormBase tRNA:WormBase
bgcolor = sub { my $f = shift;
 my $type = $f->type;
 return 'gray'   if $f->type =~ /exon|pseudogene/i;
 return 'violet' if $f->strand > 0;
 return 'turquoise';
 }

fgcolor = black
label = sub { my $f = shift;
 my ($locus)  = $f->attributes('locus');
 my ($name)   = $f->display_name;
 return $locus ? "$locus ($name)" : $name;
 }

title = sub { my $f = shift;
 return "Curated transcript " . $f->display_name . "<br /><i>click for details";
 }

category = Genes
font2color = blue
glyph = gene
citation = Non-coding curated gene models, including ncRNA, tRNA, miRNA, snRNA, snoRNA.


[GENES_NONCODING:150000]
bgcolor = sub {shift->strand>0?'violet':'turquoise'}
strand_arrow = 1
description = 0
glyph = generic


[GENES_PROTEIN_CODING]
link = sub { my $f = shift;
 my $name = $f->attributes('Gene') || $f->name;
 return "/get?name=$name;class=Gene";
 }

utr_color = gray
balloon hover = sub { my $f = shift;
 my ($transcript) = $f->display_name;
 my ($locus)  = $f->attributes('locus');
 my @return;
 if ($transcript && $locus) {
 push @return,"<b>$locus ($transcript)</b>";
 } else {
 push @return,"<b>$transcript</b>";
 }
 push @return,"<i>click to view Gene Report</i>";
 return join("<br />",@return);
 }

description = sub { my $f = shift;
 my $type = $f->type;
 return 'protein coding';
 }

height = sub { my $f = shift;
 return $f->type =~ /mRNA|CDS|UTR/i ? 10 : 6;
 }

key = Curated Genes (protein-coding)
feature = CDS:WormBase
bgcolor = sub { my $f = shift;
 my $type = $f->type;
 return 'gray'   if $f->type =~ /exon|pseudogene/i;
 return 'violet' if $f->strand > 0;
 return 'turquoise';
 }

fgcolor = black
label = sub { my $f = shift;
 my ($locus)  = $f->attributes('locus');
 my ($name) = $f->display_name;
 return $locus ? "$locus ($name)" : $name;
 }

title = sub { my $f = shift;
 return "Curated transcript " . $f->display_name . "<br /><i>click for details";
 }

category = Genes
font2color = blue
glyph = gene
citation = A subset of the full Curated Genes set limited to protein-coding genes only. Only the CDS is represented. Full models (with UTRs) can be seen on the "Curated Genes" track.


[GENES_PROTEIN_CODING:150000]
bgcolor = sub {shift->strand>0?'violet':'turquoise'}
strand_arrow = 1
description = 0
glyph = generic


[GENES_PSEUDOGENES]
link = sub { my $f = shift;
 my $name = $f->attributes('Gene') || $f->name;
 return "/get?name=$name;class=Gene";
 }

utr_color = gray
balloon hover = sub { my $f = shift;
 my ($transcript) = $f->display_name;
 my ($locus)  = $f->attributes('locus');
 my @return;
 if ($transcript && $locus) {
 push @return,"<b>$locus ($transcript)</b>";
 } else {
 push @return,"<b>$transcript</b>";
 }
 push @return,"<i>click to view Gene Report</i>";
 return join("<br />",@return);
 }

description = sub { my $f = shift;
 return 'pseudogene';
 }

height = sub { my $f = shift;
 return $f->type =~ /mRNA|CDS|UTR/i ? 10 : 6;
 }

key = Curated Genes (pseudogenes)
feature = pseudogenic_transcript:WormBase
bgcolor = sub { my $f = shift;
 my $type = $f->type;
 return 'gray'   if $f->type =~ /exon|pseudogene/i;
 return 'violet' if $f->strand > 0;
 return 'turquoise';
 }

fgcolor = black
label = sub { my $f = shift;
 my ($locus)  = $f->attributes('locus');
 my ($name)   = $f->display_name;
 return $locus ? "$locus ($name)" : $name;
 }

title = sub { my $f = shift;
 return "Curated pseudogene " . $f->display_name . "<br /><i>click for details";
 }

category = Genes
font2color = blue
glyph = gene
citation = A subset of the full Curated Genes set limited to pseudogenes only.


[GENES_PSEUDOGENES:150000]
bgcolor = sub {shift->strand>0?'violet':'turquoise'}
strand_arrow = 1
description = 0
glyph = generic


[GENETIC_LIMITS]
link = sub { my $f   = shift; my $name = $f->name;
 return "/get?name=$name;class=Gene";
 }

height = 3
description = sub { my $f = shift; my $position = join(' ',$f->notes);
 return $position;
 }

key = Genetic limits
feature = gene:interpolated_pmap_position gene:absolute_pmap_position
fgcolor = black
bgcolor = sub { my $f = shift; return ($f->source eq 'interpolated_pmap_position') ? 'red' : 'turquoise';
 }

category = Genes
label = sub { my $f = shift; my ($status) = $f->attributes('status');
 my ($gmap)   = $f->attributes('gmap');
 return "$gmap ($status)";
 }

glyph = sub { my $f = shift;
 return ($f->source eq 'interpolated_pmap_position') ? 'span' : 'box';
 }

citation = This track shows the maximal extents for genetic loci. Loci that have been interpolated onto the physical map (and whose precise location is unknown) are shown as a thin black span.  The physical extent of such loci are determined by interpolating their genetic position onto the physical map using 95% confidence limits.  Please note that the actual location of such loci may lay outside of the span depicted. Loci with known sequence connections are shown in turquoise and depicted using the physical span of the gene.


[GENOME_SEQUENCE_ERRORS]
key = Genome sequence errors
feature = possible_base_call_error:RNASeq
bgcolor = red
fgcolor = black
category = Genome Structure:Assembly & Curation
label = sub { my $f = shift;
 my $name = $f->name;
 return $f->name;
 }

glyph = box
citation = Positions within the reference genome sequence that have been identified as having a base call error. This error has not yet been corrected.


[GENOME_SEQUENCE_ERRORS_CORRECTED]
key = Genome sequence corrections
feature = base_call_error_correction:RNASeq
bgcolor = green
fgcolor = black
category = Genome Structure:Assembly & Curation
label = sub { my $f = shift;
 my $name = $f->name;
 return $f->name;
 }

glyph = box
citation = Positions within the reference genome sequence that were previously identified as having a base call error. This error has now been corrected.


[GENOMIC_CANONICAL]
link = sub { my $f = shift;
 my $note = $f->attributes('Note');
 my ($gb) = $note =~ /Genbank\s+(\S+)/;
 $gb || return undef;
 "http://www.ncbi.nlm.nih.gov:80/entrez/query.fcgi?cmd=Search&db=Nucleotide&doptcmdl=GenBank&term=${gb}[accn]";
 }

height = 7
key = Contig submissions
feature = assembly_component:Genomic_canonical
fgcolor = sienna
relative_coords = 1
label = sub { my $f = shift;
 my $note = $f->attributes('Note');
 my ($gb) = $note =~ /Genbank\s+(\S+)/;
 my $retval = $f->name;
 $retval .= " (Genbank $gb)" if $gb;
 }

das category = similarity
category = Genome Structure:Assembly & Curation
tick = 2
glyph = arrow
citation = This track shows the location and coordinates of contigs (mostly cosmids) submitted to GenBank/EMBL.


[HISTONE_BINDING_SITES]
link = sub { my $f = shift;
 my $name   = $f->name;
 return "/get?name=$name;class=Feature";
 }

key = Histone binding sites
feature = histone_binding_site:histone_binding_site_region
bgcolor = green
category = Sequence Features:Binding Sites & Regions
label = sub { my $f = shift;
 my $name   = $f->name;
 return $name;
 }

glyph = box
citation = Regions within which there is experimental evidence for one or more binding sites of a histone.


[HISTORICAL_GENES]
utr_color = gray
balloon hover = sub { my $f = shift;
 my $name = $f->name;
 my $method = $f->method;
 $method =~ s/_/ /g;
 return "<b>Historical gene prediction</b><br>$name<br>$method";
 }

height = 10
description = sub { my $f = shift;
 my $method = $f->method;
 $method =~ s/_/ /g;
 return "$method";
 }

key = Gene Models (historical)
feature = pseudogenic_transcript:history transposable_element:history protein_coding_primary_transcript:history primary_transcript:history nc_primary_transcript:history
bgcolor = sub {shift->strand>0?'violet':'turquoise'}
fgcolor = black
title = Historical gene prediction $name
category = Genes
font2color = blue
label = sub { my $f = shift;
 my $name = $f->display_name;
 return $name;
 }

glyph = transcript
citation = Historical gene predictions.


[HISTORICAL_GENES:150000]
bgcolor = white
strand_arrow = 1
description = 0
glyph = generic


[LINKS_AND_SUPERLINKS]
height = 7
key = Links and Superlinks
feature = assembly_component:Genomic_canonical assembly_component:Link
fgcolor = black
relative_coords = 1
category = Genome Structure:Assembly & Curation
das category = structural
tick = 2
glyph = arrow
citation = This track shows the location and coordinates of contigs created during the assembly of the C. elegans genome.


[LOCI:overview]
feature = gene:landmark
bgcolor = lavender
label = sub { my \$f = shift;
 return join(", ", \$f->get_tag_values('Locus'));
 }

height = 5
glyph = generic
key = Landmarks


[MASS_SPEC_PEPTIDES]
draw_target = 1
ragged_start = 1
key = Mass spec peptides
feature = translated_nucleotide_match:mass_spec_genome
bgcolor = sub { my $feature = shift;
 my $name = $feature->name;
 return 'red';
 }

category = Sequence Features:Translated Features
connector = dashed
show_mismatch = 1
citation = This track shows peptides identified in mass spec proteomics experiments.
link = sub { my $f   = shift; my $name = $f->name;
 return "/get?name=$name;class=Mass_spec_peptide";
 }

height = 7
description = sub { return undef; }
fgcolor = black
label = sub { my $f = shift;
 my $name = $f->name;
 $name =~ s/^MSP://;
 return $name;
 }

connector_color = gray
glyph = segments


[MICROARRAY_OLIGO_PROBES]
height = 4
key = Microarray oligo probes
feature = reagent:Oligo_set
fgcolor = black
connect_color = black
font2color = black
category = Reagents
connect = 1
glyph = primers
citation = This track contains Affymetrix GeneChip and Washington University GSC microarray probe sets.


[MICRO_ORF]
link = sub { my $f = shift;
 my $name   = $f->name;
 return "/get?name=$name;class=Feature";
 }

key = Micro ORF
feature = five_prime_open_reading_frame:micro_ORF
bgcolor = green
category = Transcription:Supporting Evidence
label = sub { my $f = shift;
 my $name   = $f->name;
 my $notes  = $f->notes;
 $notes     = $name if ($notes eq '');
 return "$notes";
 }

glyph = box
citation = The location of micro ORFs with experimental evidence.


[MRNA_BEST]
show_mismach = 1
draw_target = 0
ragged_start = 1
height = 6
key = mRNAs/ncRNAs (best)
feature = expressed_sequence_match:BLAT_mRNA_BEST expressed_sequence_match:BLAT_ncRNA_BEST
fgcolor = black
bgcolor = sub { my $f = shift;
 return 'yellow' if ($f->source =~ /BLAT_mRNA_BEST/);
 return 'grey';
 }

label = sub { my $f = shift;
 my $label = ($f->source =~ /BLAT_mRNA_BEST/) ? 'mRNA' : 'ncRNA';
 my $name = $f->name;
 return "$label: $name";
 }

category = Transcription:Supporting Evidence
connector = solid
glyph = segments
citation = Native (same species) full length cDNAs and ncRNAs aligned to the genome using <a href="http://genome.cse.ucsc.edu/cgi-bin/hgBlat">BLAT</a>. This track shows the best unique location for each cDNA. Other cDNA matches, some of which may represent repetitive elements, are shown in the track labeled "mRNAs/ncRNAs (other)".


[MRNA_BEST:5000]
glyph = box


[MRNA_OTHER]
show_mismach = 1
draw_target = 1
ragged_start = 1
height = 5
key = mRNAs/ncRNAs (other)
feature = alignment:BLAT_mRNA_OTHER alignment:BLAT_ncRNA_OTHER
fgcolor = black
bgcolor = sub { my $f = shift;
 return 'green' if ($f->source =~ /BLAT_mRNA_OTHER/);
 return 'grey';
 }

label = sub { my $f = shift;
 my $label = ($f->source =~ /BLAT_mRNA_OTHER/) ? 'mRNA' : 'ncRNA';
 my $name = $f->name;
 return "$label: $name";
 }

category = Transcription:Supporting Evidence
connector = solid
glyph = segments
citation = Native (same species) full length mRNAs and ncRNAs aligned to the genome using <a href="http://genome.cse.ucsc.edu/cgi-bin/hgBlat">BLAT/a>. This track shows non-unique matches, which may represent repetitive sequences. For the best single alignment, see the track labeled "mRNAs/ncRNAs (best)".


[MRNA_OTHER:5000]
glyph = box


[MotifFinder:plugin]
matrix = matrices.txt


[OPERONS]
height = 10
description = 1
key = Operons
feature = operon:operon
bgcolor = green
strand_arrow = 1
category = Genes
citation = These are operons published by Blumenthal et al, Nature 417: 851-854 (2002).
glyph = generic


[OPERONS_DEPRECATED]
height = 10
description = 1
key = Operons (deprecated)
feature = operon:deprecated_operon
bgcolor = green
strand_arrow = 1
category = Genes
glyph = generic
citation = These are historical operon predictions.


[ORFEOME_PCR_PRODUCTS]
height = 4
key = ORFeome PCR Products
feature = PCR_product:Orfeome
fgcolor = black
category = Transcription:Supporting Evidence
glyph = sub { my $f = shift;
 return 'primers' if $f->method eq 'PCR_product';
 return 'box';
 }

connect = 1
citation = This track contains Orfeome Project primer pairs and RACE tags.  These primers were used to amplify C. elegans cDNAs.  A positive amplification, shown in green, is evidence that the region between the two primers is transcribed.  Failure to amplify, shown in red, suggests either that the gene model is incorrect, or that the gene is expressed at very low levels. Detailed gene models derived from ORFeome sequencing will be added to this display in the future.  See <i>Reboul et al. Nat. Genet. 2003 Apr 7.</i> and <a href="http://worfdb.dfci.harvard.edu" target="_blank">WORFdb</a> for further information.


[OligoFinder:plugin]
search_segments = I II III IV V X


[POLYA_SITES]
link = sub { my $f   = shift; my $name = $f->name;
 return "/get?name=$name;class=Feature";
 }

description = sub { my $s = shift->source; $s=~tr/_/ /; $s; }
key = PolyA sites and signal sequences
feature = polyA_signal_sequence polyA_site
point = 1
orient = sub { my $f = shift;
 return if $f->type =~ /signal/;
 return 'W' if $f->strand eq '-1';
 return 'E';
 }

bgcolor = purple
category = Transcription:Signals
glyph = sub { my $f = shift;
 return 'diamond' if $f->type =~ /signal/;
 return 'dot' if $f->strand eq '0';
 return 'triangle';
 }

citation = High-confidence polyadenylation signal sequences and sites calculated by an algorithm trained with verified sites from full-length mRNAs. Signals are indicated with a diamond; sites with a triangle.


[POLYSOMES]
link = sub { my $f = shift;
 my $name   = $f->name;
 return "/get?name=$name;class=Feature";
 }

key = Polysomes
feature = mRNA_region:Polysome_profiling
bgcolor = green
category = Expression
label = sub { my $f = shift;
 my $name   = $f->name;
 my $notes  = $f->notes;
 $notes     = $name if ($notes eq '');
 return "$notes";
 }

glyph = box
citation = This data is from the The Lamm et al. (2011) PMID: 21177965 paper finding regions bound by the polysome fraction of RNAs being actively translated.


[PREDICTION_GENEFINDER]
feature = CDS:Genefinder
bgcolor = palevioletred
fgcolor = palevioletred
category = Transcription:Ab-initio predictions
key = Prediction: GeneFinder
glyph = gene


[PREDICTION_GENEFINDER:75000]
link = 0
strand_arrow = 1
glyph = box


[PREDICTION_GENEMARKHMM]
link = 0
key = Prediction: GeneMarkHMM
feature = CDS:GeneMarkHMM
bgcolor = palevioletred
fgcolor = palevioletred
category = Transcription:Ab-initio predictions
glyph = gene
citation = These are GeneMarkHMM gene predictions provided by Mark Borodovsky.


[PREDICTION_GENEMARKHMM:75000]
link = 0
strand_arrow = 1
glyph = box


[PREDICTION_MGENE]
feature = CDS:mGene
link = 0
bgcolor = palevioletred
fgcolor = palevioletred
category = Transcription:Ab-initio predictions
key = Prediction: mGene
glyph = gene


[PREDICTION_MGENE:75000]
link = 0
strand_arrow = 1
glyph = box


[PREDICTION_MSPLICER_ORF]
link = 0
key = Prediction: mSplicer-ORF
feature = CDS:mSplicer_orf
bgcolor = palevioletred
fgcolor = palevioletred
category = Transcription:Ab-initio predictions
glyph = gene
citation = mSplicer predict the splice forms for a given start and end of a transcript. (Note that it is not yet a full-featured gene-finder.) There are two versions: 1. "mSplicer" which splices general pre-mRNA (including UTR or coding regions) without assuming the existence of a reading frame (requires transcription start and stop). 2. "mSplicer-ORF" is optimized for coding regions and requires the knowledge of the translation start and stop. These predictions were generated against regions annotated in WS160. More details can be found at <a href="http://www.fml.mpg.de/raetsch/projects/msplicer">http://www.fml.mpg.de/raetsch/projects/msplicer</a>.


[PREDICTION_MSPLICER_ORF:75000]
link = 0
strand_arrow = 1
glyph = box


[PREDICTION_MSPLICER_TRANSCRIPT]
link = 0
key = Prediction: mSplicer
feature = CDS:mSplicer_transcript
bgcolor = palevioletred
fgcolor = palevioletred
category = Transcription:Ab-initio predictions
glyph = gene
citation = mSplicer predict the splice forms for a given start and end of a transcript. (Note that it is not yet a full-featured gene-finder.) There are two versions: 1. "mSplicer" which splices general pre-mRNA (including UTR or coding regions) without assuming the existence of a reading frame (requires transcription start and stop). 2. "mSplicer-ORF" is optimized for coding regions and requires the knowledge of the translation start and stop. These predictions were generated against regions annotated in WS160. More details can be found at <a href="http://www.fml.mpg.de/raetsch/projects/msplicer">http://www.fml.mpg.de/raetsch/projects/msplicer</a>.


[PREDICTION_MSPLICER_TRANSCRIPT:75000]
link = 0
strand_arrow = 1
glyph = box


[PREDICTION_RNAZ]
utr_color = gray
link = 0
reversecolor = cyan
forwardcolor = violet
description = sub { my $f = shift;
 my $notes = join ' ',$f->notes;
 return $notes;
 }

key = RNAz non-coding RNA genes
feature = ncRNA:RNAz
fgcolor = black
bgcolor = white
category = Transcription:Ab-initio predictions
font2color = blue
label = sub { my $f = shift;
 my $name = $f->display_name;
 return $name;
 }

glyph = transcript
citation = RNAz-derived ncRNAs were predicted using the <a href="http://www.tbi.univie.ac.at/~wash/RNAz/">RNAz algorithm</a>. Please select the RNA for more details.


[PRIMARY_GENE_TRACK]
utr_color = gray
balloon hover = sub { my $f = shift;
 my ($transcript) = $f->attributes('sequence_name');
 $transcript ||= $f->name;
 my ($locus)  = $f->attributes('locus');
 my $message;
 my $type;
 if ($f->type =~ /gene/i) {
 ($type) = $f->attributes('biotype');
 $type =~ s/_/ /g;
 } elsif ($f->type =~ /mRNA/i) {
 $type = 'protein coding';
 $message = "<i>click to view Transcript Report</i>";
 }
 my @return;
 if ($type) {
 push @return,"<b>$transcript</b>";
 push @return,"Type: $type"            if $type;
 push @return,"Locus: <i>$locus</i>"   if $locus;
 } else {
 if ($transcript && $locus) {
 push @return,"<b>$locus ($transcript)</b>";
 } else {
 push @return,"<b>$transcript</b>";
 }
 push @return,"<i>click to view Gene Report</i>";
 }
 return join("<br />",@return,$message);
 }

key = Curated Genes
feature = gene:WormBase gene:WormBase_imported
bgcolor = sub { my $f = shift;
 my $type = $f->type;
 return 'gray'   if $f->type =~ /exon|pseudogene|ncrna/i;
 return 'violet' if $f->strand > 0;
 return 'turquoise';
 }

font2color = blue
category = Genes
citation = Protein-coding gene structures result from the integration of a variety of prediction methods and data sources followed by manual review and revison by WormBase curators. tRNAs are predicted by tRNAscan, and other non-coding RNA transcripts are taken from a variety of literature sources. The purple and blue colors indicate transcripts on the forward and reverse strands respectively. If sufficient room is available between features, gene models end with a triangle; if not a small arrow is used. Grey areas represent 5' and 3' UTRs of protein-coding transcripts, assigned automatically using the extents of overlapping ESTs and full-length cDNAs. The UTR predictions have not been reviewed by WormBase curators, and some are known to contain artifacts.
link = sub { my $f = shift;
 my $transcript = $f->name;
 return if $f->type eq 'ncRNA:RNAz';
 my ($locus)  = $f->attributes('locus');
 if ($f->type =~ /Gene/i) {
 return "/get?name=$transcript;class=Gene";
 } elsif ($transcript && $locus) {
 return "/get?name=$transcript;class=Transcript";
 } else {
 return "/get?name=$transcript;class=Gene";
 }
 }

box_subparts = 1
description = sub { my $f = shift;
 my ($biotype) = $f->attributes('biotype');
 $biotype =~ s/_/ /g;
 return $biotype;
 }

height = sub { my $f = shift;
 return $f->type =~ /mRNA|CDS|UTR/i ? 10 : 6;
 }

fgcolor = black
label = sub { my $f = shift;
 my ($locus)  = $f->attributes('locus');
 my ($name) = $f->attributes('sequence_name');
 return $locus ? "$locus ($name)" : $name;
 }

title = sub { my $f = shift;
 return "Curated transcript " . $f->display_name . "<br /><i>click for details";
 }

glyph = gene


[PRIMARY_GENE_TRACK:150000]
bgcolor = sub {shift->strand>0?'violet':'turquoise'}
strand_arrow = 1
description = 0
glyph = generic


[PROMOTER_REGIONS]
link = sub { my $f = shift;
 my $name   = $f->name;
 return "/get?name=$name;class=Feature";
 }

key = Promoter regions
feature = promoter:promoter
bgcolor = green
category = Sequence Features:Binding Sites & Regions
label = sub { my $f = shift;
 my $name   = $f->name;
 return $name;
 }

glyph = box
citation = Regions within which there is experimental evidence for a promoter.


[PROTEIN_MOTIFS]
height = 7
key = Protein motifs
feature = sequence_motif:translated_feature
fgcolor = black
bgcolor = sub { my $feature = shift;
 my $name = $feature->name;
 return 'magenta'          if ($name =~ /tmhmm/);
 return 'lightseagreen'     if ($name =~ /seg/);
 return 'aquamarine'    if ($name =~ /signalp/);
 return 'chartreuse'    if ($name =~ /ncoils/);
 return 'lightsalmon'         if ($name =~ /pfam/);
 }

category = Sequence Features:Translated Features
connector = dashed
connector_color = gray
glyph = segments
citation = This track shows the extent of predicted protein motifs. Note these spans correspond to amino acid coordinates interpolated onto the physical map.  Included are signal peptide (signalp), coiled coil (ncoils) and transmembrane (tmhmm) domains, regions of low complexity (seg), and Pfam annotated motif homologies.


[RACE_SEQUENCE_TAGS]
draw_target = 1
ragged_start = 1
key = C.elegans RSTs
feature = expressed_sequence_match:BLAT_RST_BEST
bgcolor = sub { my $f = shift;
 return 'green' if $f->name =~ /RST5/;
 return 'red';
 }

strand_arrow = 1
connector = solid
category = Transcription:Supporting Evidence
show_mismatch = 1
citation = The submitted RACE data come from cloning and sequencing of 5' and 3' C.elegans RACE PCR products. The experiments were done using RNA isolated from "mix stage" wild-type N2 worms. SL1 and SL2 were used as 5' universal primers for 5'RACE experiments. The "RST's" (i.e., RACE Sequence Tags), are 5' reads from cloned RACE products (sequenced as minipools). Sequences are vector trimmed then quality trimmed (SL sequences are not removed from 5' RST's). In quality trimming, the first sliding window of 20 nt long with an average quality score higher than 15 marks the start of good quality sequences. Likewise, the first sliding window of 20 nt with average quality score lower than 15 marks the end of good quality sequences. Each RST is identified as being 5' or 3'(indicated as 5-RST or 3-RST) followed by a unique trace ID (e.g., >CCSB_5-RST_373657). 1,355 5' and 1589 3' RSTs are included in this submission. Data provided by Kourosh Salehi-Ashtiani, Vidal Lab. For information on the project, please see the <a href="http://worfdb.dfci.harvard.edu/index.php?page=race">Race Project Page</a> at <a href="http://worfdb.dfci.harvard.edu/">WorfDB</a>.
height = 5
description = sub { my $f = shift;
 return "5' RST" if $f->name =~ /RST5/;
 return "3' RST" if $f->name =~ /RST3/;
 }

group_pattern = /^OST[RF]/
fgcolor = black
label = 1
glyph = segments


[REGULATORY_REGIONS]
link = sub { my $f = shift;
 my $name   = $f->name;
 return "/get?name=$name;class=Feature";
 }

key = Regulatory regions
feature = regulatory_region:regulatory_region
bgcolor = green
category = Sequence Features:Binding Sites & Regions
label = sub { my $f = shift;
 my $name   = $f->name;
 return $name;
 }

glyph = box
citation = Assorted or unspecified regulatory elements with experimental evidence.


[REPEATS_DUST]
link = 0
height = 4
description = sub { my $f = shift;
 my ($ref,$start,$stop) = ($f->ref,$f->start,$f->stop);
 my $method = $f->method;
 $method =~ s/_/ /g;
 return join('; ',$f->notes,"$ref: $start..$stop");
 }

key = Low complextity region (Dust)
feature = low_complexity_region:dust
bgcolor = bisque
fgcolor = black
connector = none
category = Genome Structure:Repeats
label = sub { my $f = shift;
 my $method = $f->method;
 $method =~ s/_/ /g;
 return $method;
 }

citation = Low-complexity regions identified by Dust.


[REPEATS_REPEAT_MASKER]
link = 0
height = 4
description = sub { my $f = shift;
 my ($ref,$start,$stop) = ($f->ref,$f->start,$f->stop);
 my $method = $f->method;
 $method =~ s/_/ /g;
 return join('; ',$f->notes,"$ref: $start..$stop");
 }

key = Repeat Region (RepeatMasker)
feature = repeat_region:RepeatMasker
bgcolor = bisque
fgcolor = black
connector = none
category = Genome Structure:Repeats
label = sub { my $f = shift;
 my $label = $f->id;
 $label=~s/Motif://;
 return $label;
 }

citation = Repetitive regions identified by RepeatMasker.


[REPEATS_TANDEM_AND_INVERTED]
link = 0
height = 4
description = sub { my $f = shift;
 my ($ref,$start,$stop) = ($f->ref,$f->start,$f->stop);
 my $method = $f->method;
 $method =~ s/_/ /g;
 return join('; ',$f->notes,"$ref: $start..$stop");
 }

key = Tandem and Inverted Repeats
feature = inverted_repeat:inverted tandem_repeat:tandem
bgcolor = bisque
fgcolor = black
connector = none
category = Genome Structure:Repeats
label = sub { my $f = shift;
 my $method = $f->method;
 $method =~ s/_/ /g;
 return $method;
 }

citation = Exact tandem and inverted repetitive elements.


[RNASEQ]
link = sub { my $f = shift;
 my $name   = $f->name;
 return "/get?name=$name;class=Feature";
 }

bump = 0
height = sub { my $f = shift;
 my $score = $f->score;
 my $height = int($score / 2);
 $height = 50 if ($score > 100);
 $height = ($height == 0 || $height == 1) ? 2 : $height;
 return $height;
 }

key = RNASeq
feature = transcript_regions:RNASeq_reads
bgcolor = black
label = sub { my $f = shift;
 my $score = $f->score;
 return "Score: $score";
 }

category = Expression
glyph = box
citation = These boxes indicate alignments of short read sequences from all available RNASeq projects. The number of reads has been normalised by averaging over the number of libraries. The height of all boxes indicates the relative score of the feature.


[RNASEQ_ASYMMETRIES]
link = sub { my $f = shift;
 my $name   = $f->name;
 return "/get?name=$name;class=Feature";
 }

bump = 0
height = sub { my $f = shift;
 my $score = $f->score;
 my $height = int($score / 20);
 $height = 50 if ($score > 1000);
 $height = ($height == 0 || $height == 1) ? 2 : $height;
 return $height;
 }

key = RNASeq Asymmetries
feature = transcript_region:RNASeq_F_asymmetry transcript_region:RNASeq_R_asymmetry
bgcolor = sub { my $f = shift;
 my $method = $f->method;
 return 'red' if $method eq 'RNASeq_R_asymmetry';
 return 'green' if $method eq 'RNASeq_F_asymmetry';
 return 'black';
 }

label = sub { my $f = shift;
 my $score = $f->score;
 return "Score: $score";
 }

category = Expression
glyph = box
citation = Red boxes indicate regions where there are more than 2 times as many forward sense RNASeq reads aligned to the genome as reverse sense reads. This asymmetrical signal has been found empirically to be a sensitive marker for the ends of transcripts. Green boxes indicate regions where there are more than 2 times as many reverse sense RNASeq reads aligned to the genome as forward sense reads. This asymmetrical signal has been found empirically to be sensitive marker for the ends of transcripts. The height of all boxes indicates the relative score of the feature.


[RNASEQ_SPLICE]
link = sub { my $f = shift;
 my $name   = $f->name;
 return "/get?name=$name;class=Feature";
 }

height = sub { my $f = shift;
 my $score = $f->score;
 my $height = int($score / 2);
 $height = 50 if ($score > 100);
 $height = ($height == 0 || $height == 1) ? 2 : $height;
 return $height;
 }

key = RNASeq introns
feature = intron:RNASeq_splice
bgcolor = green
title = sub { my $f = shift;
 my $name   = $f->name;
 my $notes  = $f->notes;
 $notes     = $name if ($notes eq '');
 return "$notes";
 }

category = Expression
label = sub { my $f = shift;
 my $name   = $f->name;
 return $name;
 }

glyph = box
citation = These are introns formed by aligned RNASeq reads spanning a region of the genome. Alignments of short read sequences from all available RNASeq projects were used. The number of reads spanning the introns is indicated by the thickness of the display.


[SAGE_TAGS]
link = sub { my $f = shift;
 my $name = $f->name;
 return "/db/seq/sage?name=$name;class=SAGE_tag";
 }

arrow_length = 2
height = 7
description = sub { my $f = shift;
 return 0 if $f->source eq 'SAGE_tag';
 my $name = $f->name;
 $name =~ s/SAGE://;
 return $name;
 }

key = SAGE tags
feature = SAGE_tag:SAGE_tag
orient = sub { my $f = shift;
 return $f->strand > 0 ? 'E' : 'W';
 }

fgcolor = sub { my $f = shift;
 return 'lightgrey' if $f->source eq 'SAGE_tag';
 return $f->strand > 0 ? 'violet' : 'turquoise';
 }

bgcolor = sub { my $f = shift;
 return 'lightgrey' if $f->source eq 'SAGE_tag';
 return $f->strand > 0 ? 'violet' : 'turquoise';
 }

strand_arrow = 1
category = Expression
label = sub { my $f = shift;
 return '' if $f->source eq 'SAGE_tag';
 my ($cnt)  = $f->attributes('count');
 my ($gene) = $f->attributes('Gene', 'Transcript', 'Pseudogene');
 return "$gene count:$cnt" if $gene && $cnt;
 }

glyph = transcript2
citation = This track indicates the location of Serial Analysis of Gene Expression (SAGE) patterns associated with a tag and its associated genes.  Tags shown in grey are either unambiguously mapped to a gene elsewhere or are ambigous due to multiple occurences in genomic or trascript sequences.  Colored tags are mapped unambiguously to a single gene or genomic location.  Violet and turquoise refer to the plus strand and minus strands, respectively.  The number shown above tags is the total number of times this tag was observed in all SAGE experiments.


[SAGE_TAGS:10001]
arrow_length = 5
label = sub { my $f = shift;
 return 0 if $f->source eq 'SAGE_tag';
 my ($cnt) = $f->attributes('count');
 return "$cnt ";
 }



[SAGE_TAGS:7001]
arrow_length = 3


[SEGMENTAL_DUPLICATIONS]
key = Segmental duplication
feature = duplication:segmental_duplication
bgcolor = white
fgcolor = black
category = Genome Structure
label = sub { my $f = shift;
 return $f->notes || $f;
 }

glyph = box
citation = Polymorphic segmental duplication as defined by the tool OrthoCluster. This feature represents one sequence from a pair of duplicons in the N2 genome.


[SEQUENCE_SIMILARITY_BMALAYI_PROTEINS_BLASTX]
height = 5
key = B. malayi proteins
feature = protein_match:bmalayi_proteins-BLASTX
bgcolor = orange
fgcolor = black
category = Sequence Similarity:Proteins
glyph = segments
citation = Matches to WormBase B. malayi proteins, aligned with BLASTX (nucleotide to protein, via six-frame translation).


[SEQUENCE_SIMILARITY_CBRENNERI_PROTEINS_BLASTX]
height = 5
key = C. brenneri proteins
feature = protein_match:cbrenneri_proteins-BLASTX
bgcolor = orange
fgcolor = black
category = Sequence Similarity:Proteins
glyph = segments
citation = Matches to WormBase C. brenneri proteins, aligned with BLASTX (nucleotide to protein, via six-frame translation).


[SEQUENCE_SIMILARITY_CBRIGGSAE_PROTEINS_BLASTX]
height = 5
key = C. briggsae proteins
feature = protein_match:cbriggsae_proteins-BLASTX
bgcolor = orange
fgcolor = black
category = Sequence Similarity:Proteins
glyph = segments
citation = Matches to WormBase C. briggsae proteins, aligned with BLASTX (nucleotide to protein, via six-frame translation).


[SEQUENCE_SIMILARITY_CELEGANS_PROTEINS_BLASTX]
height = 5
key = C. elegans proteins
feature = protein_match:celegans_proteins-BLASTX
bgcolor = orange
fgcolor = black
category = Sequence Similarity:Proteins
glyph = segments
citation = Matches to WormBase C. elegans proteins, aligned with BLASTX (nucleotide to protein, via six-frame translation).


[SEQUENCE_SIMILARITY_CJAPONICA_PROTEINS_BLASTX]
height = 5
key = C. japonica proteins
feature = protein_match:cjaponica_proteins-BLASTX
bgcolor = orange
fgcolor = black
category = Sequence Similarity:Proteins
glyph = segments
citation = Matches to WormBase C. japonica proteins, aligned with BLASTX (nucleotide to protein, via six-frame translation).


[SEQUENCE_SIMILARITY_CREMANEI_PROTEINS_BLASTX]
height = 5
key = C. remanei proteins
feature = protein_match:cremanei_proteins-BLASTX
bgcolor = orange
fgcolor = black
category = Sequence Similarity:Proteins
glyph = segments
citation = Matches to WormBase C. remanei proteins, aligned with BLASTX (nucleotide to protein, via six-frame translation).


[SEQUENCE_SIMILARITY_DMELANOGASTER_PROTEINS_BLASTX]
height = 5
key = D. melanogaster proteins
feature = protein_match:dmelanogaster_proteins-BLASTX
bgcolor = orange
fgcolor = black
category = Sequence Similarity:Proteins
glyph = segments
citation = Matches to Drosophila melanogaster proteins from FlyBase, aligned with BLASTX (nucleotide to protein, via six-frame translation).


[SEQUENCE_SIMILARITY_HSAPIENS_PROTEINS_BLASTX]
height = 5
key = H. sapiens proteins
feature = protein_match:hsapiens_proteins-BLASTX
bgcolor = orange
fgcolor = black
category = Sequence Similarity:Proteins
glyph = segments
citation = Matches to Human proteins from Ensembl, aligned with BLASTX (nucleotide to protein, via six-frame translation).


[SEQUENCE_SIMILARITY_NEMATODE_CDNAS]
height = 4
key = INSDC nematode cDNAs
feature = expressed_sequence_match:EMBL_nematode_cDNAs-BLAT
fgcolor = black
connector = solid
category = Sequence Similarity:Nucleotide
split_on_cigar = 1
title = $name
glyph = segments
citation = Nematode cDNAs from INSDC that have been aligned to the C. elegans genome using <a href="http://genome.cse.ucsc.edu/cgi-bin/hgBlat">BLAT</a>.


[SEQUENCE_SIMILARITY_NEMATODE_CDNAS:50000]
glyph = box


[SEQUENCE_SIMILARITY_NEMATODE_NET_CDNAS]
height = 4
key = Nematode.net cDNAs
feature = expressed_sequence_match:NEMATODE.NET_cDNAs-BLAT
fgcolor = black
connector = solid
category = Sequence Similarity:Nucleotide
split_on_cigar = 1
title = $name
glyph = segments
citation = cDNAs provided by <a href="http://www.nematode.net">Nematode.net</a>, a web-accessible resource for investigating gene sequences from nematode genomes. Aligned using <a href="http://genome.cse.ucsc.edu/cgi-bin/hgBlat">BLAT</a>.


[SEQUENCE_SIMILARITY_NEMATODE_NET_CDNAS:50000]
glyph = box


[SEQUENCE_SIMILARITY_NEMBASE_CDNAS]
height = 4
key = NEMBASE cDNAs
feature = expressed_sequence_match:NEMBASE_cDNAs-BLAT
fgcolor = black
connector = solid
category = Sequence Similarity:Nucleotide
split_on_cigar = 1
title = $name
glyph = segments
citation = ESTs provided by <a href="http://nema.cap.ed.ac.uk/nematodeESTs/nembase.html">NEMBASE</a>. NEMBASE is a publicly available online database providing access to the sequence and associated meta-data currently being generated as part of the University of Edinburgh and Wellcome Trust Sanger Institute parasitic nematode EST programme. Aligned using <a href="http://genome.cse.ucsc.edu/cgi-bin/hgBlat">BLAT</a>.


[SEQUENCE_SIMILARITY_NEMBASE_CDNAS:5000]
glyph = box


[SEQUENCE_SIMILARITY_PPACIFICUS_PROTEINS_BLASTX]
height = 5
key = P. pacificus proteins
feature = protein_match:ppacificus_proteins-BLASTX
bgcolor = orange
fgcolor = black
category = Sequence Similarity:Proteins
glyph = segments
citation = Matches to WormBase P. pacificus proteins, aligned with BLASTX (nucleotide to protein, via six-frame translation).


[SEQUENCE_SIMILARITY_SCEREVISIAE_PROTEINS_BLASTX]
height = 5
key = S. cerevisiae proteins
feature = protein_match:scerevisiae_proteins-BLASTX
bgcolor = orange
fgcolor = black
category = Sequence Similarity:Proteins
glyph = segments
citation = Matches to S. cerevisiae proteins from SGD, aligned with BLASTX (nucleotide to protein, via six-frame translation).


[SEQUENCE_SIMILARITY_UNIPROT_BLASTX]
height = 5
key = Other UniProt proteins
feature = protein_match:UniProt-BLASTX
bgcolor = orange
fgcolor = black
category = Sequence Similarity:Proteins
glyph = segments
citation = Matches to proteins from a slimmed-down version of UniProt (with proteins from WormBase core nematodes, human, fly and yeast removed), aligned with BLASTX (nucleotide to protein, via six-frame translation).


[SEQUENCE_SIMILARITY_WORMBASE_CORE_ESTS_AND_MRNAS_BEST]
link = sub { my $f = shift;
 my $source = $f->source;
 my $name = $f->name;
 return "/get?name=$name;class=Sequence";
 }

height = 4
key = WormBase nematode mRNAs/ESTs (best)
feature = expressed_sequence_match:BLAT_Caen_EST_BEST expressed_sequence_match:BLAT_Caen_mRNA_BEST
bgcolor = sub { my $f = shift;
 my $source = $f->source;;
 return 'lightblue' if $source eq 'BLAT_Caen_mRNA_BEST';
 return 'green' if $source eq 'BLAT_Caen_EST_BEST';
 }

fgcolor = black
label = 0
title = sub { my $f = shift;
 return $f->attributes('Species');
 }

connector = solid
category = Sequence Similarity:Nucleotide
glyph = segments
citation = ESTs and mRNAs from other WormBase core species aligned to the genome using <a href="http://genome.cse.ucsc.edu/cgi-bin/hgBlat">BLAT</a>. This track shows the best location for each cDNA sequence. <p> mRNAs are shown in light blue; ESTs in green.


[SEQUENCE_SIMILARITY_WORMBASE_CORE_ESTS_AND_MRNAS_BEST:50000]
glyph = box


[SEQUENCE_SIMILARITY_WORMBASE_CORE_ESTS_AND_MRNAS_OTHER]
link = sub { my $f = shift;
 my $source = $f->source;
 my $name = $f->name;
 return "/get?name=$name;class=Sequence";
 }

height = 4
key = WormBase nematode mRNAs/ESTs (other)
feature = expressed_sequence_match:BLAT_Caen_EST_OTHER expressed_sequence_match:BLAT_Caen_mRNA_OTHER
bgcolor = sub { my $f = shift;
 my $source = $f->source;;
 return 'lightblue' if $source eq 'BLAT_Caen_mRNA_OTHER';
 return 'green' if $source eq 'BLAT_Caen_EST_OTHER';
 }

fgcolor = black
title = sub { my $feature = shift;
 return $feature->attributes('Species');
 }

category = Sequence Similarity:Nucleotide
label = 0
connector = solid
glyph = segments
citation = ESTs and mRNAs from other WormBase core species aligned to the genome using <a href="http://genome.cse.ucsc.edu/cgi-bin/hgBlat">BLAT</a>. This track shows non-unique matches, which may represent repetitive sequences. For the best single alignment, see the track labeled "WormBase nematode mRNAs and ESTs (best)". <p> mRNAs are shown in light blue; ESTs in green.


[SEQUENCE_SIMILARITY_WORMBASE_CORE_ESTS_AND_MRNAS_OTHER:50000]
glyph = box


[Spectrogram:plugin]
supress title = 1


[TECRED_TAGS]
feature = nucleotide_match:TEC_RED
bgcolor = red
category = Transcription:Supporting Evidence
height = 5
glyph = box
key = TEC-RED tags
citation = Trans-spliced Exon Coupled RNA End Determination (TEC-RED) tags. TEC-RED uses a method similar to SAGE to identify expressed genes and characterize the 5' end of transcripts.


[TRACK DEFAULTS]
utr_color = gainsboro
reversecolor = turquoise
forwardcolor = violet
label_transcripts = sub { shift->get_SeqFeatures('mRNA') > 1 }
empty_tracks = key
max segment = 2000000
font2color = blue
keystyle = between


[TRANSCRIPTIONALLY_ACTIVE_REGION]
key = Transcriptionally Active Region
feature = transcribed_fragment:TranscriptionallyActiveRegion
bgcolor = green
fgcolor = black
category = Transcription:Supporting Evidence
label = sub { my $f = shift;
 my $name = $f->name;
 my $notes = $f->notes;
 return "$notes";
 }

glyph = box
citation = Transcriptionally Active Regions (TARs) found by the Miller lab from tiling-array projects run as part of the modENCODE project.


[TRANSCRIPTION_END_SITE]
key = Transcription end site
feature = transcription_end_site:RNASeq
bgcolor = white
fgcolor = black
category = Transcription:Signals
label = sub { my $f = shift;
 return $f->notes || $f;
 }

glyph = box
citation = Transcription_end_site defined by analysis of RNASeq short read datasets (example Hillier et al.)


[TRANSCRIPTION_FACTOR_BINDING_REGION]
link = sub { my $f = shift;
 my $name   = $f->name;
 return "/get?name=$name;class=Feature";
 }

key = Transcription factor binding regions
feature = TF_binding_site:TF_binding_site_region
bgcolor = green
fgcolor = black
category = Sequence Features:Binding Sites & Regions
label = sub { my $f = shift;
 my $name = $f->name;
 return $name;
 }

glyph = box
citation = Regions within which there is experimental evidence of one or more binding sites of a transcription factor.


[TRANSCRIPTION_FACTOR_BINDING_SITE]
link = sub { my $f = shift;
 my $name   = $f->name;
 return "/get?name=$name;class=Feature";
 }

key = Transcription factor binding sites
feature = TF_binding_site:TF_binding_site
bgcolor = green
fgcolor = black
category = Sequence Features:Binding Sites & Regions
label = sub { my $f = shift;
 my $name = $f->name;
 return $name;
 }

glyph = box
citation = Sites where there is experimental evidence of a transcription factor binding site.


[TRANSCRIPTION_START_SITE]
key = Transcription start site
feature = TSS:RNASeq
bgcolor = white
fgcolor = black
category = Transcription:Signals
label = sub { my $f = shift;
 return $f->notes || $f;
 }

glyph = box
citation = Transcription_start_site defined by analysis of RNASeq short read datasets (example Hillier et al.)


[TRANSPOSONS]
utr_color = gray
height = 6
key = Transposons
feature = transposable_element:Transposon
bgcolor = gray
fgcolor = black
font2color = blue
category = Genes
label = sub { my $f = shift;
 my $name = $f->display_name;
 return $name;
 }

title = Transposon $name
glyph = segments
citation = These are transposon spans reviewed by WormBase curators.


[TRANSPOSONS:150000]
bgcolor = gray
strand_arrow = 1
description = 0
glyph = generic


[TRANSPOSON_GENES]
utr_color = gray
link = sub { my $f = shift;
 my $name = $f->attributes('Gene') || $f->name;
 return "/get?name=$name;class=Gene";
 }

balloon hover = sub { my $f    = shift;
 my $name = $f->name;
 my $s    = $f->type;
 my $type = $s =~ /CDS/ ? 'transposon CDS' : 'transposon pseudogene';
 my ($ref,$start,$stop) = ($f->ref,$f->start,$f->stop);
 my $notes = $f->notes;
 my $string = join('<br />',"<b>$name</b>",$type,"position: $ref:$start..$stop",
 "notes: $notes");
 return $string;
 }

height = 6
description = sub { my $f    = shift;
 my $s    = $f->type;
 my $type = $s =~ /CDS/ ? 'transposon CDS' : 'transposon pseudogene';
 return $type;
 }

key = Transposon Genes
feature = transposable_element_CDS:WormBase_transposon transposable_element_Pseudogene:WormBase_transposon
fgcolor = black
bgcolor = gray
font2color = blue
category = Genes
title = Transposon $name
label = sub { my $f = shift;
 my $name = $f->display_name;
 return $name;
 }

glyph = transcript
citation = These are transposon spans reviewed by WormBase curators.


[TRANSPOSON_GENES:150000]
bgcolor = gray
strand_arrow = 1
description = 0
glyph = generic


[TRANS_SPLICED_ACCEPTOR]
link = sub { my $f   = shift; my $name = $f->name;
 return "/get?name=$name;class=Feature";
 }

height = 8
description = sub { shift->source;
 }

key = Trans-spliced acceptor
feature = SL1_acceptor_site SL2_acceptor_site
point = 1
orient = sub { my $f = shift;
 my $strand  = $f->strand;
 return 'E' if $strand > 0;
 return 'W';
 }

bgcolor = sub { my $f = shift;
 return $f->source eq 'SL1' ? 'red' : 'green';
 }

font2color = 'red';
category = Transcription:Signals
label = 0
label density = 100
glyph = triangle
citation = These are SL1 and SL2 trans-spliced acceptors published by Blumenthal et al, Nature 417: 851-854 (2002). SL1 acceptors are show in red, SL2 in green.


[TranslationF]
arrow_height = 2
frame2 = darkblue
height = 20
key = 3-frame translation (forward)
global feature = 1
fgcolor = purple
frame1 = blue
strand = +1
start_codons = 0
category = DNA
translation = 3frame
frame0 = cadetblue
citation = This track shows the position of stop codons at low magnifications, and the 3-frame translation at high magnifications.  Only the forward strand is shown.
glyph = translation


[TranslationR]
arrow_height = 2
frame2 = crimson
height = 20
key = 3-frame translation (reverse)
global feature = 1
fgcolor = blue
frame1 = red
start_codons = 0
strand = -1
category = DNA
translation = 3frame
frame0 = darkred
citation = This track shows the position of stop codons at low magnifications, and the 3-frame translation at high magnifications.  Only the reverse strand is shown.
glyph = translation


[VARIATIONS_CHANGE_OF_FUNCTION_ALLELES]
balloon hover = sub { my $f    = shift;
 my $type = $f->method;
 $type =~ s/_/ /g;
 my ($name)        = $f->attributes('public_name');
 my ($consequence) = $f->attributes('consequence');
 $consequence =~ s/_/ /g;
 my ($ref,$start,$stop) = ($f->ref,$f->start,$f->stop);
 my ($status)    = $f->attributes('status');
 my ($nt_change) = $f->attributes('substitution') || $f->attributes('insertion');
 my ($aa_change) = $f->attributes('aachange');
 my ($interpolated_map_position) = $f->attributes('interpolated_map_position');
 my $source = $f->source;
 my $sanitized_source = $source;
 $sanitized_source =~ s/_Polymorphisms//g;
 $sanitized_source =~ s/_/ /g;
 $sanitized_source =~ s/PCoF_//g;
 my @notes = ("<b>Putative Change-of-Function Allele: $name</b>");
 push (@notes,"type: $type");
 push (@notes,"status: $status")                  if $status;
 push (@notes,"position: $ref:$start..$stop");
 push (@notes,"nucleotide change: $nt_change")     if $nt_change;
 push (@notes,"amino acid change: $aa_change")     if $aa_change;
 push (@notes,"consequence: " . lc($consequence)) if $consequence;
 push (@notes,"interpolated map position: $interpolated_map_position")   if $interpolated_map_position;
 my ($strains) = $f->attributes('strain');
 if ($strains) {
 my $strains = join(', ',map { '<a href="http://www.wormbase.org/db/get?class=Strain;name=' . $_ . '">' . $_ . '</a>' } split(',',$strains));
 push @notes,"strains: $strains";
 }
 push (@notes,"source: $sanitized_source");
 return join('<br />',@notes);
 }

description = sub { my $f = shift;
 my $m = $f->method;
 $m =~ s/_/ /g;
 return $m;
 }

height = 8
key = Change-of-function alleles
feature = complex_substitution:PCoF_Allele deletion:PCoF_Allele insertion_site:PCoF_Allele substitution:PCoF_Allele transposable_element_insertion_site:PCoF_Allele deletion:PCoF_CGH_allele complex_substitution:PCoF_KO_consortium deletion:PCoF_KO_consortium point_mutation:PCoF_KO_consortium point_mutation:PCoF_Million_mutation deletion:PCoF_Million_mutation insertion_site:PCoF_Million_mutation complex_substitution:PCoF_Million_mutation sequence_alteration:PCoF_Million_mutation deletion:PCoF_Variation_project point_mutation:PCoF_Variation_project complex_substitution:PCoF_NBP_knockout deletion:PCoF_NBP_knockout transposable_element_insertion_site:PCoF_NemaGENETAG_consortium
bgcolor = sub { my $f = shift;
 my $m = $f->method;
 my %attributes = $f->attributes();
 return 'green'  if $attributes{consequence} eq 'missense';
 return 'yellow' if $attributes{consequence} eq 'coding_exon';
 return 'red'    if $attributes{consequence} eq 'nonsense';
 return 'blue'   if $attributes{consequence} eq 'frameshift';
 return 'white';
 }

fgcolor = black
label = sub { my $f = shift;
 my %attributes = $f->attributes;
 my $name = $attributes{public_name} || $f->name;
 if ($name =~ /^WBVar/) {
 ($name) = $f->attributes('other_name') || $name;
 }
 return join('-',@$name);
 }

category = Alleles, Variations, RNAi
font2color = blue
glyph = sub { my $f = shift;
 my $m = $f->method;
 return 'triangle' if $m =~ /insertion/i;
 return 'box'      if $m eq 'complex_substitution';
 return 'box'      if $m eq 'deletion';
 return 'diamond'  if $m eq 'substitution';
 return 'diamond'  if $m eq 'point_mutation';
 return 'generic';
 }

citation = This track shows alleles that generate a putative change-of-function. In this track, the type of mutation is indicated by its glyph: Boxes are deletions. Triangles are insertions. Point mutations and substitutions are diamonds. Color shows the potential effect on coding regions. Green indicates a possible missense; red a possible nonsense; blue a frameshift; yellow a disruption of a coding exon(s); and white for everything else. Mouse over the feature for details.


[VARIATIONS_CHANGE_OF_FUNCTION_POLYMORPHISMS]
balloon hover = sub { my $f    = shift;
 my $type = $f->type;
 $type =~ s/_/ /g;
 my ($name)        = $f->attributes('public_name');
 my ($consequence) = $f->attributes('consequence');
 $consequence =~ s/_/ /g;
 my ($ref,$start,$stop) = ($f->ref,$f->start,$f->stop);
 my ($status)    = $f->attributes('status');
 my ($nt_change) = $f->attributes('substitution') || $f->attributes('insertion');
 my ($aa_change) = $f->attributes('aachange');
 my ($interpolated_map_position) = $f->attributes('interpolated_map_position');
 my $source = $f->source;
 my $sanitized_source = $source;
 $sanitized_source =~ s/_polymorphism//ig;
 $sanitized_source =~ s/PCoF_//g;
 $sanitized_source =~ s/_/ /g;
 my @notes = ("<b>Putative Change-of-Function Allele: $name</b>");
 push (@notes,"type: $type");
 push (@notes,"status: $status")                  if $status;
 push (@notes,"position: $ref:$start..$stop");
 push (@notes,"nucleotide change: $nt_change")     if $nt_change;
 push (@notes,"amino acid change: $aa_change")     if $aa_change;
 push (@notes,"consequence: " . lc($consequence)) if $consequence;
 push (@notes,"interpolated map position: $interpolated_map_position")   if $interpolated_map_position;
 my ($strains) = $f->attributes('strain');
 if ($strains) {
 my $strains = join(', ',map { '<a href="http://www.wormbase.org/db/get?class=Strain;name=' . $_ . '">' . $_ . '</a>' } split(',',$strains));
 push @notes,"strains: $strains";
 }
 push (@notes,"source: $sanitized_source");
 return join('<br />',@notes);
 }

description = sub { my $f = shift;
 my $m = $f->method;
 $m =~ s/_/ /g;
 return $m;
 }

height = 8
key = Change-of-function polymorphisms
feature = deletion:PCoF_CGH_allele_Polymorhpism deletion:PCoF_Variation_project_Polymorhpism insertion_site:PCoF_Variation_project_Polymorhpism SNP:PCoF_Variation_project_Polymorhpism substitution:PCoF_Variation_project_Polymorhpism complex_substitution:PCoF_Variation_project_Polymorhpism sequence_alteration:PCoF_Variation_project_Polymorhpism
bgcolor = sub { my $f = shift;
 my $m = $f->method;
 my %attributes = $f->attributes();
 return 'green'  if $attributes{consequence} eq 'Missense';
 return 'yellow' if $attributes{consequence} eq 'Coding_exon';
 return 'red'    if $attributes{consequence} eq 'Nonsense';
 return 'blue'   if $attributes{consequence} eq 'Frameshift';
 return 'white';
 }

fgcolor = black
label = sub { my $f = shift;
 my %attributes = $f->attributes;
 my $name = $attributes{public_name} || $f->name;
 if ($name =~ /^WBVar/) {
 ($name) = $f->attributes('other_name') || $name;
 }
 return join('-',@$name);
 }

category = Alleles, Variations, RNAi
font2color = blue
glyph = sub { my $f = shift;
 my $m = $f->method;
 return 'triangle' if $m eq 'insertion_site';
 return 'triangle' if $m eq 'mobile_element_insertion';
 return 'box'      if $m eq 'complex_substitution';
 return 'box'      if $m eq 'deletion';
 return 'diamond'  if $m eq 'substitution';
 return 'diamond'  if $m eq 'point_mutation';
 return 'generic';
 }

citation = This track shows single nucleotide polymorphisms (SNPs) that may generate a change of function. In this track, the molecular nature of the polymorphism is indicated by its glyph: Boxes are deletions; triangles are insertions; point mutations and substitutions are diamonds. Color shows the potential effect on coding regions. Green indicates a possible missense; red a possible nonsense; blue a frameshift; yellow a disruption of a coding exon(s); and white for everything else. Mouse over the feature for details.


[VARIATIONS_CLASSICAL_ALLELES]
balloon hover = sub { my $f    = shift;
 my $type = $f->type;
 $type =~ s/_/ /g;
 my ($name)        = $f->attributes('public_name');
 my ($consequence) = $f->attributes('consequence');
 $consequence =~ s/_/ /g;
 my ($ref,$start,$stop) = ($f->ref,$f->start,$f->stop);
 my ($status)    = $f->attributes('status');
 my ($nt_change) = $f->attributes('substitution') || $f->attributes('insertion');
 my ($aa_change) = $f->attributes('aachange');
 my ($interpolated_map_position) = $f->attributes('interpolated_map_position');
 my $source = $f->source;
 my $sanitized_source = $source;
 $sanitized_source =~ s/_Polymorphisms//g;
 $sanitized_source =~ s/_/ /g;
 my @notes = ("<b>Allele: $name</b>");
 push (@notes,"type: $type");
 push (@notes,"status: $status")                  if $status;
 push (@notes,"position: $ref:$start..$stop");
 push (@notes,"nucleotide change: $nt_change")     if $nt_change;
 push (@notes,"amino acid change: $aa_change")     if $aa_change;
 push (@notes,"consequence: " . lc($consequence)) if $consequence;
 push (@notes,"interpolated map position: $interpolated_map_position")   if $interpolated_map_position;
 my ($strains) = $f->attributes('strain');
 if ($strains) {
 my $strains = join(', ',map { '<a href="http://www.wormbase.org/db/get?class=Strain;name=' . $_ . '">' . $_ . '</a>' } split(',',$strains));
 push @notes,"strains: $strains";
 }
 push (@notes,"source: $sanitized_source");
 return join('<br />',@notes);
 }

description = sub { my $f = shift;
 my $m = $f->method;
 $m =~ s/_/ /g;
 return $m;
 }

height = 8
key = Classical alleles
feature = deletion:Allele insertion_site:Allele substitution:Allele complex_substitution:Allele transposable_element_insertion_site:Allele
bgcolor = sub { my $f = shift;
 my $m = $f->method;
 return 'red'    if $m eq 'deletion';
 return 'yellow' if $m eq 'point_mutation';
 return 'yellow' if $m eq 'substitution';
 return 'blue'   if $m eq 'complex_substitution';
 return 'white';
 }

fgcolor = black
label = sub { my $f = shift;
 my %attributes = $f->attributes;
 my $name = $attributes{public_name} || $f->name;
 if ($name =~ /^WBVar/) {
 ($name) = $f->attributes('other_name') || $name;
 }
 return join('-',@$name);
 }

category = Alleles, Variations, RNAi
font2color = blue
glyph = sub { my $f = shift;
 my $m = $f->method;
 return 'triangle' if $m eq 'insertion_site';
 return 'triangle' if $m eq 'mobile_element_insertion';
 return 'box'      if $m eq 'complex_substitution';
 return 'box'      if $m eq 'deletion';
 return 'diamond'  if $m eq 'substitution';
 return 'diamond'  if $m eq 'point_mutation';
 return 'generic';
 }

citation = This track shows classical alleles comprised of insertions, deletions, substitutions and complex changes. These alleles were typically generated during forward genetic screens. Red boxes represent deletions; yellow diamonds represent substitutions; blue boxes represent complex substitutions; and white triangles represent insertions.


[VARIATIONS_HIGH_THROUGHPUT_ALLELES]
balloon hover = sub { my $f    = shift;
 my $type = $f->method;
 $type =~ s/_/ /g;
 my ($name)        = $f->attributes('public_name');
 my ($consequence) = $f->attributes('consequence');
 $consequence =~ s/_/ /g;
 my ($ref,$start,$stop) = ($f->ref,$f->start,$f->stop);
 my ($status)    = $f->attributes('status');
 my ($nt_change) = $f->attributes('substitution') || $f->attributes('insertion');
 my ($aa_change) = $f->attributes('aachange');
 my ($interpolated_map_position) = $f->attributes('interpolated_map_position');
 my $source = $f->source;
 my $sanitized_source = $source;
 $sanitized_source =~ s/_Polymorphisms//g;
 $sanitized_source =~ s/_/ /g;
 my @notes = ("<b>High-Throughput Allele: $name</b>");
 push (@notes,"type: $type");
 push (@notes,"status: $status")                  if $status;
 push (@notes,"position: $ref:$start..$stop");
 push (@notes,"nucleotide change: $nt_change")     if $nt_change;
 push (@notes,"amino acid change: $aa_change")     if $aa_change;
 push (@notes,"consequence: " . lc($consequence)) if $consequence;
 push (@notes,"interpolated map position: $interpolated_map_position")   if $interpolated_map_position;
 my ($strains) = $f->attributes('strain');
 if ($strains) {
 my $strains = join(', ',map { '<a href="http://www.wormbase.org/db/get?class=Strain;name=' . $_ . '">' . $_ . '</a>' } split(',',$strains));
 push @notes,"strains: $strains";
 }
 push (@notes,"source: $sanitized_source");
 return join('<br />',@notes);
 }

description = sub { my $f = shift;
 my $m = $f->method;
 $m =~ s/_/ /g;
 return $m;
 }

height = 8
key = High-throughput alleles
feature = deletion:CGH_allele complex_substitution:KO_consortium deletion:KO_consortium point_mutation:KO_consortium deletion:Variation_project insertion_site:Variation_project point_mutation:Variation_project complex_substitution:NBP_knockout deletion:NBP_knockout transposable_element_insertion_site:NemaGENETAG_consortium
bgcolor = sub { my $f = shift;
 my $m = $f->method;
 return 'red'    if $m eq 'deletion';
 return 'yellow' if $m eq 'point_mutation';
 return 'yellow' if $m eq 'substitution';
 return 'blue'   if $m eq 'complex_substitution';
 return 'white';
 }

fgcolor = black
label = sub { my $f = shift;
 my %attributes = $f->attributes;
 my $name = $attributes{public_name} || $f->name;
 if ($name =~ /^WBVar/) {
 ($name) = $f->attributes('other_name') || $name;
 }
 return join('-',@$name);
 }

category = Alleles, Variations, RNAi
font2color = blue
glyph = sub { my $f = shift;
 my $m = $f->method;
 return 'triangle' if $m eq 'insertion_site';
 return 'triangle' if $m eq 'mobile_element_insertion';
 return 'box'      if $m eq 'complex_substitution';
 return 'box'      if $m eq 'deletion';
 return 'diamond'  if $m eq 'substitution';
 return 'diamond'  if $m eq 'point_mutation';
 return 'generic';
 }

citation = These are alleles generated through high-throughput, genome-wide projects. Million Mutation Project alleles are placed in a separate track.


[VARIATIONS_MILLION_MUTATION_PROJECT]
link = sub { my $f = shift;
 my $name = $f->name;
 return "/get?name=$name;class=Variation";
 }

balloon hover = sub { my $f    = shift;
 my $type = $f->type;
 $type =~ s/_/ /g;
 my ($name)        = $f->attributes('public_name');
 my ($consequence) = $f->attributes('consequence');
 $consequence =~ s/_/ /g;
 my ($ref,$start,$stop) = ($f->ref,$f->start,$f->stop);
 my ($status)    = $f->attributes('status');
 my ($nt_change) = $f->attributes('substitution') || $f->attributes('insertion');
 my ($aa_change) = $f->attributes('aachange');
 my ($interpolated_map_position) = $f->attributes('interpolated_map_position');
 my $source = $f->source;
 my $sanitized_source = $source;
 $sanitized_source =~ s/_Polymorphisms//g;
 $sanitized_source =~ s/_/ /g;
 my @notes = ("<b>Million Mutation SNP: $name</b>");
 push (@notes,"type: $type");
 push (@notes,"status: $status")                  if $status;
 push (@notes,"position: $ref:$start..$stop");
 push (@notes,"nucleotide change: $nt_change")     if $nt_change;
 push (@notes,"amino acid change: $aa_change")     if $aa_change;
 push (@notes,"consequence: " . lc($consequence)) if $consequence;
 push (@notes,"interpolated map position: $interpolated_map_position")   if $interpolated_map_position;
 my ($strains) = $f->attributes('strain');
 if ($strains) {
 my $strains = join(', ',map { '<a href="http://www.wormbase.org/db/get?class=Strain;name=' . $_ . '">' . $_ . '</a>' } split(',',$strains));
 push @notes,"strains: $strains";
 }
 push (@notes,"source: $sanitized_source");
 return join('<br />',@notes);
 }

description = sub { my $f = shift;
 my $m = $f->method;
 $m =~ s/_/ /g;
 return $m;
 }

height = 8
key = Million Mutation Project
feature = point_mutation:Million_mutation complex_substitution:Million_mutation deletion:Million_mutation insertion_site:Million_mutation sequence_alteration:Million_mutation
bgcolor = sub { my $f = shift;
 my $m = $f->method;
 my %attributes = $f->attributes();
 return 'green'  if $attributes{consequence} eq 'missense';
 return 'yellow' if $attributes{consequence} eq 'coding_exon';
 return 'red'    if $attributes{consequence} eq 'nonsense';
 return 'blue'   if $attributes{consequence} eq 'frameshift';
 return 'white';
 }

fgcolor = black
label = sub { my $f = shift;
 my %attributes = $f->attributes;
 my $name = $attributes{public_name} || $f->name;
 if ($name =~ /^WBVar/) {
 ($name) = $f->attributes('other_name') || $name;
 }
 return join('-',@$name);
 }

category = Alleles, Variations, RNAi
font2color = blue
glyph = sub { my $f = shift;
 my $m = $f->method;
 return 'triangle' if $m eq 'insertion_site';
 return 'triangle' if $m eq 'mobile_element_insertion';
 return 'box'      if $m eq 'complex_substitution';
 return 'box'      if $m eq 'deletion';
 return 'diamond'  if $m eq 'substitution';
 return 'diamond'  if $m eq 'point_mutation';
 return 'generic';
 }

citation = This track shows SNPs from the The Million Mutation Project (Waterston/Moerman). The color of the SNP represents its potental effect on a gene. Green indicates a possible missense; red a possible nonsense; blue a frameshift; yellow a disruption of a coding exon(s); and white for everything else.


[VARIATIONS_POLYMORPHISMS]
balloon hover = sub { my $f    = shift;
 my $type = $f->method;
 $type =~ s/_/ /g;
 my ($name)        = $f->attributes('public_name');
 my ($consequence) = $f->attributes('consequence');
 $consequence =~ s/_/ /g;
 my ($ref,$start,$stop) = ($f->ref,$f->start,$f->stop);
 my ($status)    = $f->attributes('status');
 my ($nt_change) = $f->attributes('substitution') || $f->attributes('insertion');
 my ($aa_change) = $f->attributes('aachange');
 my ($interpolated_map_position) = $f->attributes('interpolated_map_position');
 my $source = $f->source;
 my $sanitized_source = $source;
 $sanitized_source =~ s/_Polymorphisms//g;
 $sanitized_source =~ s/_/ /g;
 my @notes = ("<b>Polymorphism: $name</b>");
 push (@notes,"type: $type");
 push (@notes,"status: $status")                  if $status;
 push (@notes,"position: $ref:$start..$stop");
 push (@notes,"nucleotide change: $nt_change")     if $nt_change;
 push (@notes,"amino acid change: $aa_change")     if $aa_change;
 push (@notes,"consequence: " . lc($consequence)) if $consequence;
 push (@notes,"interpolated map position: $interpolated_map_position")   if $interpolated_map_position;
 my ($strains) = $f->attributes('strain');
 if ($strains) {
 my $strains = join(', ',map { '<a href="http://www.wormbase.org/db/get?class=Strain;name=' . $_ . '">' . $_ . '</a>' } split(',',$strains));
 push @notes,"strains: $strains";
 }
 push (@notes,"source: $sanitized_source");
 return join('<br />',@notes);
 }

ciations = This track shows single nucleotide polymorphisms (SNPs). In this track, the molecular nature of the polymorphism is indicated by its glyph: Boxes are deletions; triangles are insertions; point mutations and substitutions are diamonds. Color reflects the source strain: polymorphisms found in CB4858 (Pasadena) are shown in blue; those found in CB4856 (Hawaii) in yellow, and all others in white.
description = sub { my $f = shift;
 my $m = $f->method;
 $m =~ s/_/ /g;
 return $m;
 }

height = sub { my $f = shift;
 my %attributes = $f->attributes();
 if (defined $attributes{rflp} && $attributes{status} eq 'Confirmed') {
 return 14;
 } else {
 return 8;
 }
 }

key = Polymorphisms
feature = deletion:CGH_allele_Polymorhpism substitution:Variation_project_Polymorhpism deletion:Variation_project_Polymorhpism SNP:Variation_project_Polymorhpism insertion_site:Variation_project_Polymorhpism complex_substitution:Variation_project_Polymorhpism sequence_alteration:Variation_project_Polymorhpism deletion:Allele_Polymorhpism
bgcolor = sub { my $f = shift;
 my ($strain) = $f->attributes('strain');
 if ($strain eq 'CB4858' || $strain eq 'AF16') {
 return 'blue';
 } elsif ($strain eq 'CB4856' || $strain eq 'HK104') {
 return 'yellow';
 } else {
 return 'white';
 }
 }

fgcolor = black
font2color = blue
label = sub { my $f = shift;
 my %attributes = $f->attributes;
 my $name = $attributes{public_name} || $f->name;
 if ($name =~ /^WBVar/) {
 ($name) = $attributes{other_name} || $name;
 }
 return join('-',@$name);
 }

category = Alleles, Variations, RNAi
glyph = sub { my $f = shift;
 my $m = $f->method;
 return 'triangle' if $m eq 'insertion_site';
 return 'triangle' if $m eq 'mobile_element_insertion';
 return 'box'      if $m eq 'complex_substitution';
 return 'box'      if $m eq 'deletion';
 return 'diamond'  if $m eq 'substitution';
 return 'diamond'  if $m eq 'point_mutation';
 return 'generic';
 }



[VARIATIONS_RNAI_BEST]
height = 4
description = sub { my $f = shift;
 my $source = $f->attributes('Laboratory');
 my $string = $source ? "source lab: $source" : '';
 return $string;
 }

key = RNAi experiments (primary targets)
feature = RNAi_reagent:RNAi_primary experimental_result_region:cDNA_for_RNAi
bgcolor = goldenrod
fgcolor = black
category = Alleles, Variations, RNAi
label = sub { my $f = shift;
 my $name   = $f->attributes('History_name');
 my $string = $name ? $name : $f->name;
 return $string;
 }

glyph = segments
citation = This track represents RNAi probes that have been aligned to the genome using a combination of BLAST and BLAT programs and have sequence identity to the target location of at least 95% over a stretch of at least 100 nt. Probes that satisfy these criteria are almost certain to produce RNAi effect on overlapping genes and the corresponding locations are usually the primary genomic targets of an RNAi experiment. Note that it is possible for a probe to have multiple primary targets within the genome. Click on the RNAi element to get more information about the experiment.


[VARIATIONS_RNAI_OTHER]
height = 4
description = sub { my $f = shift;
 my $source = $f->attributes('Laboratory');
 my $string = $source ? "source lab: $source" : '';
 return $string;
 }

key = RNAi experiments (secondary targets)
feature = RNAi_reagent:RNAi_secondary
bgcolor = red
fgcolor = black
category = Alleles, Variations, RNAi
label = sub { my $f = shift;
 my $name   = $f->attributes('History_name');
 my $string = $name ? $name : $f->name;
 return $string;
 }

glyph = segments
citation = This track represents RNAi probes that have been aligned to the genome using BLAST program and have sequence identity to the target location from 80 to 94.99% over a stretch of at least 200 nt. Probes that satisfy these criteria may or may not produce RNAi effect on overlapping genes and the corresponding locations represent possible secondary (unintended) genomic targets of an RNAi experiment. Click on the RNAi element to get more information about the experiment.


[VARIATIONS_TRANSPOSON_INSERTION_SITES]
balloon hover = sub { my $f    = shift;
 my $type = $f->type;
 $type =~ s/_/ /g;
 my ($name)        = $f->attributes('public_name');
 my ($consequence) = $f->attributes('consequence');
 $consequence =~ s/_/ /g;
 my ($ref,$start,$stop) = ($f->ref,$f->start,$f->stop);
 my ($status)    = $f->attributes('status');
 my ($nt_change) = $f->attributes('substitution') || $f->attributes('insertion');
 my ($aa_change) = $f->attributes('aachange');
 my ($interpolated_map_position) = $f->attributes('interpolated_map_position');
 my $source = $f->source;
 my $sanitized_source = $source;
 $sanitized_source =~ s/_Polymorphisms//g;
 $sanitized_source =~ s/_/ /g;
 my @notes = ("<b>Transposon insertion site: $name</b>");
 push (@notes,"type: $type");
 push (@notes,"status: $status")                  if $status;
 push (@notes,"position: $ref:$start..$stop");
 push (@notes,"nucleotide change: $nt_change")     if $nt_change;
 push (@notes,"amino acid change: $aa_change")     if $aa_change;
 push (@notes,"consequence: " . lc($consequence)) if $consequence;
 push (@notes,"interpolated map position: $interpolated_map_position")   if $interpolated_map_position;
 my ($strains) = $f->attributes('strain');
 if ($strains) {
 my $strains = join(', ',map { '<a href="http://www.wormbase.org/db/get?class=Strain;name=' . $_ . '">' . $_ . '</a>' } split(',',$strains));
 push @notes,"strains: $strains";
 }
 push (@notes,"source: $sanitized_source");
 return join('<br />',@notes);
 }

description = sub { my $f = shift;
 my $method = $f->method;
 return 'Mos insertion' if $f->source eq 'Mos_insertion_allele';
 return 'NemaGENETAG insertion' if $f->source eq 'NemaGENETAG_consortium';
 return 'transposon insertion';
 }

height = 8
key = Transposon insert sites
feature = transposable_element_insertion_site:Mos_insertion_allele transposable_element_insertion_site:Allele transposable_element_insertion_site:NemaGENETAG_consortium
bgcolor = sub { my $f = shift;
 return 'yellow' if $f->source eq 'Mos_insertion_allele';
 return 'red' if $f->source eq 'NemaGENETAG_consortium';
 return 'blue';
 }

fgcolor = black
label = sub { my $f = shift;
 my %attributes = $f->attributes;
 my $name = $attributes{public_name} || $f->name;
 if ($name =~ /^WBVar/) {
 ($name) = $f->attributes('other_name') || $name;
 }
 return join('-',@$name);
 }

category = Alleles, Variations, RNAi
font2color = blue
glyph = diamond
citation = This track shows transposon insertion sites engineered by Laurent Segalat and others [<a href="/get?name=%5Bwm99ab757%5D;class=Paper">Alvarez et al.</a>, Towards a genome-wide collection of transposon insertions, International C. elegans Meeting 1999 Yellow triangles are Mos-derived transposon insertions; red trangles are NemaGENETAG consortium insertion sites; blue triangles are Tc* derived transposon insertions.


[general]
link = /get?name=$name;class=$class
initial landmark = III:9060076..9071680
landmark features = supercontig region:Genomic_canonical region:link gene:landmark
reference class = Sequence
automatic classes = Sequence CDS
description = C. elegans (current release)
database = this_database
search attributes = note alias id
html1 = <p style="margin:40px"><b>PLEASE NOTE</b><br />We are in the process of reorganizing the layout and grouping of tracks on the Genome Browser. In addition to standardizing appearance across all species, we seek to 1) emphasize the end result of experiments rather than method or approach; 2) promote high-confidence data over that of lower confidence; 3) remove obsolete data.</p><p style="margin:40px">Further evolution is expected over the next few releases. Should you have any questions, comments or suggestions, please send us an email at <a href="mailto:help@wormbase.org">help@wormbase.org</a> or contact us on Twitter (<a href="http://twitter.com/wormbase">@wormbase</a>)</p>
examples = IV IV:20,000..40,000 lin-29 dpy-* rhodopsin B0019 PCR_product:sjjB0019.1 ttattaaacaattta
default tracks = PRIMARY_GENE_TRACK CLASSICAL_ALLELES POLYMORPHISMS LOCI:overview


[modencode_henikoff:database]
db_args = -dsn dbi:mysql:database=modencode_henikoff;host=mysql.wormbase.org -user wormbase -pass sea3l3ganz
search options = default +wildcard -stem +fulltext +autocomplete
db_adaptor = Bio::DB::SeqFeature::Store


[modencode_hillier_genelets:database]
db_args = -dsn dbi:mysql:database=modencode_hillier_genelets;host=mysql.wormbase.org -user wormbase -pass sea3l3ganz
search options = default +wildcard -stem +fulltext +autocomplete
db_adaptor = Bio::DB::SeqFeature::Store


[modencode_hillier_itranscripts:database]
db_args = -dsn dbi:mysql:database=modencode_hillier_itranscripts;host=mysql.wormbase.org -user wormbase -pass sea3l3ganz
search options = exact
db_adaptor = Bio::DB::SeqFeature::Store


[modencode_lieb:database]
db_args = -dsn dbi:mysql:database=modencode_lieb;host=mysql.wormbase.org -user wormbase -pass sea3l3ganz
search options = exact
db_adaptor = Bio::DB::SeqFeature::Store


[modencode_piano:database]
db_args = -dsn dbi:mysql:database=modencode_piano;host=mysql.wormbase.org -user wormbase -pass sea3l3ganz
search options = exact
db_adaptor = Bio::DB::SeqFeature::Store


[modencode_snyder:database]
db_args = -dsn dbi:mysql:database=modencode_snyder;host=mysql.wormbase.org -user wormbase -pass sea3l3ganz
search options = exact
db_adaptor = Bio::DB::SeqFeature::Store


[modencode_waterston:database]
db_args = -dsn dbi:mysql:database=modencode_waterston;host=mysql.wormbase.org -user wormbase -pass sea3l3ganz
search options = exact
db_adaptor = Bio::DB::SeqFeature::Store


[this_database:database]
db_args = -adaptor DBI::mysql -dsn dbi:mysql:database=c_elegans_PRJNA13758_WS240;host=mysql.wormbase.org -user wormbase -pass sea3l3ganz
search options = default, +wildcard, -stem, +fulltext, +autocomplete
db_adaptor = Bio::DB::SeqFeature::Store


